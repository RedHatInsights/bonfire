We are here
{'name': 'host-inventory', 'components': [{'name': 'host-inventory-frontend', 'path': '/deploy/frontend.yaml', 'host': 'github', 'repo': 'RedHatInsights/insights-inventory-frontend', 'ref': 'master', 'parameters': {'KAFKA_BOOTSTRAP_HOST': 'mq-kafka', 'KAFKA_BOOTSTRAP_PORT': 29092, 'BACKOFFICE_HOST': 'backoffice-proxy.apps.ext.spoke.preprod.us-west-2.aws.paas.redhat.com', 'TENANT_TRANSLATOR_HOST': 'gateway.3scale-dev.svc.cluster.local', 'TENANT_TRANSLATOR_PORT': '8891', 'KAFKA_PRODUCER_RETRIES': '8', 'KAFKA_PRODUCER_RETRY_BACKOFF_MS': '250'}}, {'name': 'host-inventory', 'path': '/deploy/clowdapp.yml', 'host': 'github', 'repo': 'RedHatInsights/insights-host-inventory', 'ref': 'master', 'parameters': {'KAFKA_BOOTSTRAP_HOST': 'mq-kafka', 'KAFKA_BOOTSTRAP_PORT': 29092, 'BACKOFFICE_HOST': 'backoffice-proxy.apps.ext.spoke.preprod.us-west-2.aws.paas.redhat.com', 'TENANT_TRANSLATOR_HOST': 'gateway.3scale-dev.svc.cluster.local', 'TENANT_TRANSLATOR_PORT': '8891', 'KAFKA_PRODUCER_RETRIES': '8', 'KAFKA_PRODUCER_RETRY_BACKOFF_MS': '250', 'CLOWDER_ENABLED': 'true', 'REPLICAS_P1': 1, 'REPLICAS_PMIN': 1, 'CPU_REQUEST': '250m', 'CPU_LIMIT': '500m', 'MEMORY_REQUEST': '256Mi', 'MEMORY_LIMIT': '512Mi', 'DEDUP_MEMORY_LIMIT': '2Gi', 'MEMORY_REQUEST_REAPER': '512Mi', 'MEMORY_LIMIT_REAPER': '1Gi', 'URLLIB3_LOG_LEVEL': 'DEBUG', 'SCRIPT_CHUNK_SIZE': '100', 'REPLICAS_SP': 1, 'REPLICAS_SVC': 1, 'BYPASS_RBAC': 'true', 'BYPASS_TENANT_TRANSLATION': 'true', 'BYPASS_UNLEASH': 'true', 'XJOIN_SEARCH_HOST': 'xjoin-search', 'XJOIN_SEARCH_PORT': 4000}}]}
{
  "kind": "List",
  "apiVersion": "v1",
  "metadata": {},
  "items": [
    {
      "apiVersion": "cloud.redhat.com/v1alpha1",
      "kind": "ClowdApp",
      "metadata": {
        "name": "host-inventory"
      },
      "spec": {
        "database": {
          "name": "host-inventory",
          "version": 12
        },
        "dependencies": [
          "rbac",
          "xjoin-search",
          "ingress"
        ],
        "deployments": [
          {
            "minReplicas": 1,
            "name": "service",
            "podSpec": {
              "command": [
                "gunicorn",
                "--workers=4",
                "--threads=8",
                "--limit-request-field_size=16380",
                "--limit-request-line=8190",
                "--worker-tmp-dir=/gunicorn",
                "-c",
                "gunicorn.conf.py",
                "-b",
                "0.0.0.0:8000",
                "-t",
                "60",
                "run"
              ],
              "env": [
                {
                  "name": "APP_NAME",
                  "value": "inventory"
                },
                {
                  "name": "PATH_PREFIX",
                  "value": "api"
                },
                {
                  "name": "INVENTORY_LEGACY_API_URL",
                  "value": "/r/insights/platform/inventory/v1/"
                },
                {
                  "name": "prometheus_multiproc_dir",
                  "value": "/tmp/inventory/prometheus"
                },
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "URLLIB3_LOG_LEVEL",
                  "value": "DEBUG"
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "PAYLOAD_TRACKER_SERVICE_NAME",
                  "value": "inventory"
                },
                {
                  "name": "PAYLOAD_TRACKER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "XJOIN_GRAPHQL_URL",
                  "value": "http://xjoin-search:4000/graphql"
                },
                {
                  "name": "BYPASS_RBAC",
                  "value": "true"
                },
                {
                  "name": "KAFKA_PRODUCER_ACKS",
                  "value": "1"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRIES",
                  "value": "8"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRY_BACKOFF_MS",
                  "value": "250"
                },
                {
                  "name": "KAFKA_SECURITY_PROTOCOL",
                  "value": "PLAINTEXT"
                },
                {
                  "name": "KAFKA_SASL_MECHANISM",
                  "value": "PLAIN"
                },
                {
                  "name": "KAFKA_EVENT_TOPIC",
                  "value": "platform.inventory.events"
                },
                {
                  "name": "KAFKA_NOTIFICATION_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "TENANT_TRANSLATOR_URL",
                  "value": "http://gateway.3scale-dev.svc.cluster.local:8891/internal/orgIds"
                },
                {
                  "name": "BYPASS_TENANT_TRANSLATION",
                  "value": "true"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                },
                {
                  "name": "SEGMENTIO_WRITE_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "WRITE_KEY",
                      "name": "segmentio",
                      "optional": true
                    }
                  }
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/health",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 60
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/health",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 60
              },
              "volumeMounts": [
                {
                  "mountPath": "/tmp/inventory/prometheus",
                  "name": "prometheus-volume"
                },
                {
                  "mountPath": "/gunicorn",
                  "name": "gunicorn-worker-dir"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "prometheus-volume"
                },
                {
                  "emptyDir": {
                    "medium": "Memory"
                  },
                  "name": "gunicorn-worker-dir"
                }
              ]
            },
            "webServices": {
              "public": {
                "apiPath": "inventory",
                "enabled": true
              }
            }
          },
          {
            "minReplicas": 1,
            "name": "mq-pmin",
            "podSpec": {
              "command": [
                "/bin/sh",
                "-c",
                "python3 inv_mq_service.py"
              ],
              "env": [
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "INVENTORY_DB_SSL_CERT",
                  "value": ""
                },
                {
                  "name": "KAFKA_CONSUMER_TOPIC",
                  "value": "platform.inventory.host-ingress"
                },
                {
                  "name": "KAFKA_HOST_INGRESS_TOPIC",
                  "value": "platform.inventory.host-ingress"
                },
                {
                  "name": "KAFKA_EVENT_TOPIC",
                  "value": "platform.inventory.events"
                },
                {
                  "name": "KAFKA_NOTIFICATION_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "KAFKA_SYSTEM_PROFILE_TOPIC",
                  "value": "platform.inventory.system-profile"
                },
                {
                  "name": "KAFKA_HOST_INGRESS_GROUP",
                  "value": "inventory-mq"
                },
                {
                  "name": "PAYLOAD_TRACKER_SERVICE_NAME",
                  "value": "inventory-mq-service"
                },
                {
                  "name": "PAYLOAD_TRACKER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "KAFKA_PRODUCER_ACKS",
                  "value": "1"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRIES",
                  "value": "8"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRY_BACKOFF_MS",
                  "value": "250"
                },
                {
                  "name": "KAFKA_SECURITY_PROTOCOL",
                  "value": "PLAINTEXT"
                },
                {
                  "name": "KAFKA_SASL_MECHANISM",
                  "value": "PLAIN"
                },
                {
                  "name": "TENANT_TRANSLATOR_URL",
                  "value": "http://gateway.3scale-dev.svc.cluster.local:8891/internal/orgIds"
                },
                {
                  "name": "BYPASS_TENANT_TRANSLATION",
                  "value": "true"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": 9000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 9000
                }
              }
            }
          },
          {
            "minReplicas": 1,
            "name": "mq-p1",
            "podSpec": {
              "command": [
                "/bin/sh",
                "-c",
                "python3 inv_mq_service.py"
              ],
              "env": [
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "INVENTORY_DB_SSL_CERT",
                  "value": ""
                },
                {
                  "name": "KAFKA_CONSUMER_TOPIC",
                  "value": "platform.inventory.host-ingress-p1"
                },
                {
                  "name": "KAFKA_HOST_INGRESS_TOPIC",
                  "value": "platform.inventory.host-ingress-p1"
                },
                {
                  "name": "KAFKA_EVENT_TOPIC",
                  "value": "platform.inventory.events"
                },
                {
                  "name": "KAFKA_NOTIFICATION_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "KAFKA_SYSTEM_PROFILE_TOPIC",
                  "value": "platform.inventory.system-profile"
                },
                {
                  "name": "KAFKA_HOST_INGRESS_GROUP",
                  "value": "inventory-mq"
                },
                {
                  "name": "PAYLOAD_TRACKER_SERVICE_NAME",
                  "value": "inventory-mq-service"
                },
                {
                  "name": "PAYLOAD_TRACKER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "KAFKA_PRODUCER_ACKS",
                  "value": "1"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRIES",
                  "value": "8"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRY_BACKOFF_MS",
                  "value": "250"
                },
                {
                  "name": "KAFKA_SECURITY_PROTOCOL",
                  "value": "PLAINTEXT"
                },
                {
                  "name": "KAFKA_SASL_MECHANISM",
                  "value": "PLAIN"
                },
                {
                  "name": "TENANT_TRANSLATOR_URL",
                  "value": "http://gateway.3scale-dev.svc.cluster.local:8891/internal/orgIds"
                },
                {
                  "name": "BYPASS_TENANT_TRANSLATION",
                  "value": "true"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "initContainers": [
                {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "python3 manage.py db upgrade"
                  ],
                  "inheritEnv": true
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": 9000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 9000
                }
              }
            }
          },
          {
            "minReplicas": 1,
            "name": "mq-sp",
            "podSpec": {
              "command": [
                "/bin/sh",
                "-c",
                "python3 inv_mq_service.py"
              ],
              "env": [
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "INVENTORY_DB_SSL_CERT",
                  "value": ""
                },
                {
                  "name": "KAFKA_CONSUMER_TOPIC",
                  "value": "platform.inventory.system-profile"
                },
                {
                  "name": "KAFKA_HOST_INGRESS_TOPIC",
                  "value": "platform.inventory.host-ingress"
                },
                {
                  "name": "KAFKA_EVENT_TOPIC",
                  "value": "platform.inventory.events"
                },
                {
                  "name": "KAFKA_NOTIFICATION_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "KAFKA_SYSTEM_PROFILE_TOPIC",
                  "value": "platform.inventory.system-profile"
                },
                {
                  "name": "KAFKA_HOST_INGRESS_GROUP",
                  "value": "inventory-mq"
                },
                {
                  "name": "PAYLOAD_TRACKER_SERVICE_NAME",
                  "value": "inventory-mq-service"
                },
                {
                  "name": "PAYLOAD_TRACKER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "KAFKA_PRODUCER_ACKS",
                  "value": "1"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRIES",
                  "value": "8"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRY_BACKOFF_MS",
                  "value": "250"
                },
                {
                  "name": "KAFKA_SECURITY_PROTOCOL",
                  "value": "PLAINTEXT"
                },
                {
                  "name": "KAFKA_SASL_MECHANISM",
                  "value": "PLAIN"
                },
                {
                  "name": "TENANT_TRANSLATOR_URL",
                  "value": "http://gateway.3scale-dev.svc.cluster.local:8891/internal/orgIds"
                },
                {
                  "name": "BYPASS_TENANT_TRANSLATION",
                  "value": "true"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": 9000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "tcpSocket": {
                  "port": 9000
                }
              }
            }
          }
        ],
        "envName": "foo",
        "featureFlags": true,
        "jobs": [
          {
            "name": "reaper",
            "podSpec": {
              "command": [
                "/bin/sh",
                "-c",
                "python3 host_reaper.py"
              ],
              "env": [
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "INVENTORY_DB_SSL_CERT",
                  "value": ""
                },
                {
                  "name": "KAFKA_BOOTSTRAP_SERVERS",
                  "value": "mq-kafka:29092"
                },
                {
                  "name": "PAYLOAD_TRACKER_KAFKA_TOPIC",
                  "value": "platform.payload-status"
                },
                {
                  "name": "PAYLOAD_TRACKER_SERVICE_NAME",
                  "value": "inventory-mq-service"
                },
                {
                  "name": "PAYLOAD_TRACKER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "PROMETHEUS_PUSHGATEWAY",
                  "value": "localhost:9091"
                },
                {
                  "name": "KAFKA_EVENT_TOPIC",
                  "value": "platform.inventory.events"
                },
                {
                  "name": "KAFKA_NOTIFICATION_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "KAFKA_PRODUCER_ACKS",
                  "value": "1"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRIES",
                  "value": "8"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRY_BACKOFF_MS",
                  "value": "250"
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "KAFKA_SECURITY_PROTOCOL",
                  "value": "PLAINTEXT"
                },
                {
                  "name": "KAFKA_SASL_MECHANISM",
                  "value": "PLAIN"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "512Mi"
                }
              },
              "restartPolicy": "Never"
            },
            "schedule": "@hourly",
            "suspend": true
          },
          {
            "name": "sp-validator",
            "podSpec": {
              "command": [
                "/bin/sh",
                "-c",
                "python3 system_profile_validator.py"
              ],
              "env": [
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "GIT_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "token",
                      "name": "dippy-bot"
                    }
                  }
                },
                {
                  "name": "GIT_USER",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "user",
                      "name": "dippy-bot"
                    }
                  }
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "INVENTORY_DB_SSL_CERT",
                  "value": ""
                },
                {
                  "name": "KAFKA_BOOTSTRAP_SERVERS",
                  "value": "mq-kafka:29092"
                },
                {
                  "name": "PAYLOAD_TRACKER_KAFKA_TOPIC",
                  "value": "platform.payload-status"
                },
                {
                  "name": "PAYLOAD_TRACKER_SERVICE_NAME",
                  "value": "inventory-mq-service"
                },
                {
                  "name": "PAYLOAD_TRACKER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "PROMETHEUS_PUSHGATEWAY",
                  "value": "localhost:9091"
                },
                {
                  "name": "KAFKA_PRODUCER_ACKS",
                  "value": "1"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRIES",
                  "value": "8"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRY_BACKOFF_MS",
                  "value": "250"
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "KAFKA_CONSUMER_TOPIC",
                  "value": "platform.inventory.host-ingress"
                },
                {
                  "name": "KAFKA_HOST_INGRESS_TOPIC",
                  "value": "platform.inventory.host-ingress"
                },
                {
                  "name": "KAFKA_EVENT_TOPIC",
                  "value": "platform.inventory.events"
                },
                {
                  "name": "KAFKA_NOTIFICATION_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "KAFKA_SYSTEM_PROFILE_TOPIC",
                  "value": "platform.inventory.system-profile"
                },
                {
                  "name": "KAFKA_ADDITIONAL_VALIDATION_TOPIC",
                  "value": "platform.inventory.host-ingress-p1"
                },
                {
                  "name": "KAFKA_SP_VALIDATOR_MAX_MESSAGES",
                  "value": "10000"
                },
                {
                  "name": "KAFKA_SECURITY_PROTOCOL",
                  "value": "PLAINTEXT"
                },
                {
                  "name": "KAFKA_SASL_MECHANISM",
                  "value": "PLAIN"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                }
              },
              "restartPolicy": "Never"
            },
            "schedule": "@hourly",
            "suspend": true
          },
          {
            "name": "pendo-syncher",
            "podSpec": {
              "command": [
                "/bin/sh",
                "-c",
                "python3 pendo_syncher.py"
              ],
              "env": [
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "INVENTORY_DB_SSL_CERT",
                  "value": ""
                },
                {
                  "name": "PROMETHEUS_PUSHGATEWAY",
                  "value": "localhost:9091"
                },
                {
                  "name": "PENDO_SYNC_ACTIVE",
                  "value": "false"
                },
                {
                  "name": "PENDO_INTEGRATION_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "apikey",
                      "name": "pendo-creds"
                    }
                  }
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "512Mi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "256Mi"
                }
              },
              "restartPolicy": "Never"
            },
            "schedule": "@daily",
            "suspend": true
          },
          {
            "name": "synchronizer",
            "podSpec": {
              "command": [
                "/bin/sh",
                "-c",
                "python3 rebuild_events_topic.py && python3 host_synchronizer.py"
              ],
              "env": [
                {
                  "name": "INVENTORY_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INVENTORY_DB_SSL_MODE",
                  "value": "prefer"
                },
                {
                  "name": "INVENTORY_DB_SSL_CERT",
                  "value": ""
                },
                {
                  "name": "KAFKA_BOOTSTRAP_SERVERS",
                  "value": "mq-kafka:29092"
                },
                {
                  "name": "KAFKA_EVENT_TOPIC",
                  "value": "platform.inventory.events"
                },
                {
                  "name": "KAFKA_NOTIFICATION_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "PAYLOAD_TRACKER_KAFKA_TOPIC",
                  "value": "platform.payload-status"
                },
                {
                  "name": "PAYLOAD_TRACKER_SERVICE_NAME",
                  "value": "inventory-mq-service"
                },
                {
                  "name": "PAYLOAD_TRACKER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "PROMETHEUS_PUSHGATEWAY",
                  "value": "localhost:9091"
                },
                {
                  "name": "KAFKA_PRODUCER_ACKS",
                  "value": "1"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRIES",
                  "value": "8"
                },
                {
                  "name": "KAFKA_PRODUCER_RETRY_BACKOFF_MS",
                  "value": "250"
                },
                {
                  "name": "NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "KAFKA_SECURITY_PROTOCOL",
                  "value": "PLAINTEXT"
                },
                {
                  "name": "KAFKA_SASL_MECHANISM",
                  "value": "PLAIN"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "SCRIPT_CHUNK_SIZE",
                  "value": "100"
                },
                {
                  "name": "UNLEASH_URL",
                  "value": ""
                },
                {
                  "name": "UNLEASH_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "CLIENT_ACCESS_TOKEN",
                      "name": "bypass",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "BYPASS_UNLEASH",
                  "value": "true"
                },
                {
                  "name": "REBUILD_EVENTS_TIME_LIMIT",
                  "value": "3600"
                }
              ],
              "image": "quay.io/cloudservices/insights-inventory:586e0d7",
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "3Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "3Gi"
                }
              },
              "restartPolicy": "OnFailure"
            }
          }
        ],
        "kafkaTopics": [
          {
            "partitions": 1,
            "topicName": "platform.inventory.system-profile"
          },
          {
            "partitions": 1,
            "topicName": "platform.payload-status"
          },
          {
            "partitions": 1,
            "topicName": "platform.inventory.events"
          },
          {
            "partitions": 1,
            "topicName": "platform.notifications.ingress"
          },
          {
            "partitions": 1,
            "topicName": "platform.inventory.host-ingress"
          },
          {
            "partitions": 1,
            "topicName": "platform.inventory.host-ingress-p1"
          }
        ],
        "testing": {
          "iqePlugin": "host-inventory"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "labels": {
          "app": "insights-inventory"
        },
        "name": "insights-inventory"
      },
      "spec": {
        "ports": [
          {
            "name": "port-8080",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8000
          }
        ],
        "selector": {
          "pod": "host-inventory-service"
        }
      }
    },
    {
      "apiVersion": "metrics.console.redhat.com/v1alpha1",
      "kind": "FloorPlan",
      "metadata": {
        "name": "host-inventory"
      },
      "spec": {
        "database": {
          "secretName": "host-inventory-db"
        },
        "logLevel": "INFO",
        "objectStore": {
          "secretName": "dummy-secret"
        },
        "queries": [
          {
            "prefix": "insights/inventory/hosts",
            "query": "SELECT\n  \"id\",\n  \"account\" AS \"account_number\",\n  \"created_on\" AS \"created_at\",\n  \"modified_on\" AS \"updated_at\",\n  \"ansible_host\" AS \"ansible_host\",\n  CONCAT_WS('.',\"system_profile_facts\"->'operating_system'->>'name',\"system_profile_facts\"->'operating_system'->'major',\"system_profile_facts\"->'operating_system'->'minor') AS \"os_version\",\n  \"system_profile_facts\"->'host_type' AS \"host_type\",\n  \"system_profile_facts\"->'ansible'->'controller_version' AS \"ansible_controller_version\",\n  \"system_profile_facts\"->'ansible'->'hub_version' AS \"ansible_hub_version\",\n  \"system_profile_facts\"->'rhsm'->'version' AS \"rhsm_version\",\n  \"system_profile_facts\"->'is_marketplace' AS \"is_marketplace_installation\",\n  \"system_profile_facts\"->'insights_client_version' AS \"insights_client_version\",\n  \"system_profile_facts\"->'insights_egg_version' AS \"insights_egg_version\",\n  \"system_profile_facts\"->'satellite_managed' AS \"is_satellite_managed\",\n  \"system_profile_facts\"->'subscription_status' AS \"subscription_status\",\n  \"system_profile_facts\"->'ansible' AS \"ansible_workload\",\n  \"system_profile_facts\"->'mssql' AS \"mssql_workload\",\n  \"system_profile_facts\"->'sap' AS \"sap_workload\",\n  \"system_profile_facts\"->'rhc_client_id' AS \"rhc_client_id\"\nFROM \"hosts\""
          }
        ],
        "suspend": true
      }
    },
    {
      "apiVersion": "cloud.redhat.com/v1alpha1",
      "kind": "ClowdApp",
      "metadata": {
        "name": "xjoin-search"
      },
      "spec": {
        "dependencies": [
          "host-inventory"
        ],
        "deployments": [
          {
            "minReplicas": 1,
            "name": "api",
            "podSpec": {
              "env": [
                {
                  "name": "LOG_LEVEL",
                  "value": "debug"
                },
                {
                  "name": "LOG_PRETTY",
                  "value": "false"
                },
                {
                  "name": "NODE_ENV",
                  "value": "production"
                },
                {
                  "name": "ES_NODES",
                  "value": "http://xjoin-elasticsearch-es-default:9200"
                },
                {
                  "name": "ES_USERNAME",
                  "value": "elastic"
                },
                {
                  "name": "ES_PASSWORD",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "elastic",
                      "name": "xjoin-elasticsearch-es-elastic-user"
                    }
                  }
                },
                {
                  "name": "HOSTS_INDEX",
                  "value": "xjoin.inventory.hosts"
                }
              ],
              "image": "quay.io/cloudservices/xjoin-search:0218b52",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/health",
                  "port": "metrics",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/health",
                  "port": "metrics",
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              }
            },
            "webServices": {
              "private": {
                "enabled": true
              }
            }
          }
        ],
        "envName": "foo",
        "jobs": [
          {
            "name": "heartbeat",
            "podSpec": {
              "env": [
                {
                  "name": "INGRESS_HOST",
                  "value": "ingress-service"
                },
                {
                  "name": "INGRESS_PORT",
                  "value": "8000"
                },
                {
                  "name": "INGRESS_PROTOCOL",
                  "value": "http"
                }
              ],
              "image": "quay.io/cloudservices/inventory-heartbeat:latest",
              "resources": {
                "limits": {
                  "cpu": "51m",
                  "memory": "51Mi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "50Mi"
                }
              },
              "restartPolicy": "Never"
            },
            "schedule": "@hourly",
            "suspend": true
          }
        ],
        "optionalDependencies": [
          "xjoin-api-gateway"
        ],
        "testing": {
          "iqePlugin": "xjoin"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "labels": {
          "app": "xjoin-search"
        },
        "name": "xjoin-search"
      },
      "spec": {
        "ports": [
          {
            "port": 4000,
            "protocol": "TCP",
            "targetPort": "private"
          }
        ],
        "selector": {
          "pod": "xjoin-search-api"
        }
      }
    },
    {
      "apiVersion": "elasticsearch.k8s.elastic.co/v1",
      "kind": "Elasticsearch",
      "metadata": {
        "name": "xjoin-elasticsearch"
      },
      "spec": {
        "http": {
          "service": {
            "metadata": {
              "creationTimestamp": null
            },
            "spec": {}
          },
          "tls": {
            "selfSignedCertificate": {
              "disabled": true
            }
          }
        },
        "nodeSets": [
          {
            "config": {
              "node.store.allow_mmap": false
            },
            "count": 1,
            "name": "default",
            "podTemplate": {
              "spec": {
                "containers": [
                  {
                    "env": [
                      {
                        "name": "ES_JAVA_OPTS",
                        "value": "-Xms500m -Xmx500m"
                      }
                    ],
                    "name": "elasticsearch",
                    "resources": {
                      "limits": {
                        "cpu": "1",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "250m",
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "version": "7.10.0"
      }
    },
    {
      "apiVersion": "xjoin.cloud.redhat.com/v1alpha1",
      "kind": "XJoinPipeline",
      "metadata": {
        "name": "xjoinpipeline"
      },
      "spec": {
        "ephemeral": true,
        "pause": false
      }
    },
    {
      "apiVersion": "networking.k8s.io/v1",
      "kind": "NetworkPolicy",
      "metadata": {
        "name": "allow-from-xjoin-operator-namespace"
      },
      "spec": {
        "ingress": [
          {
            "from": [
              {
                "namespaceSelector": {
                  "matchLabels": {
                    "kubernetes.io/metadata.name": "xjoin"
                  }
                }
              }
            ]
          }
        ],
        "podSelector": {},
        "policyTypes": [
          "Ingress"
        ]
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "debezium.connector.config": "{\n  \"tasks.max\": \"{{.DebeziumTasksMax}}\",\n  \"database.hostname\": \"{{.HBIDBHost}}\",\n  \"database.port\": \"{{.HBIDBPort}}\",\n  \"database.user\": \"{{.HBIDBUser}}\",\n  \"database.password\": \"{{.HBIDBPassword}}\",\n  \"database.dbname\": \"{{.HBIDBName}}\",\n  \"database.server.name\": \"{{.ResourceNamePrefix}}.{{.Version}}\",\n  \"database.sslmode\": \"{{.HBIDBSSLMode}}\",\n  \"database.sslrootcert\": \"{{.HBIDBSSLRootCert}}\",\n  \"table.whitelist\": \"public.hosts\",\n  \"plugin.name\": \"pgoutput\",\n  \"transforms\": \"unwrap\",\n  \"transforms.unwrap.type\": \"io.debezium.transforms.ExtractNewRecordState\",\n  \"transforms.unwrap.delete.handling.mode\": \"rewrite\",\n  \"errors.log.enable\": {{.DebeziumErrorsLogEnable}},\n  \"errors.log.include.messages\": true,\n  \"slot.name\": \"{{.ReplicationSlotName}}\",\n  \"max.queue.size\": {{.DebeziumQueueSize}},\n  \"max.batch.size\": {{.DebeziumMaxBatchSize}},\n  \"poll.interval.ms\": {{.DebeziumPollIntervalMS}}\n}",
        "elasticsearch.connector.config": "{\n    \"tasks.max\": \"{{.ElasticSearchTasksMax}}\",\n    \"topics\": \"{{.Topic}}\",\n    \"key.ignore\": \"false\",\n    \"connection.url\": \"{{.ElasticSearchURL}}\",\n    {{if .ElasticSearchUsername}}\"connection.username\": \"{{.ElasticSearchUsername}}\",{{end}}\n    {{if .ElasticSearchPassword}}\"connection.password\": \"{{.ElasticSearchPassword}}\",{{end}}\n    \"type.name\": \"_doc\",\n    \"transforms\": \"valueToKey, extractKey, expandJSON, expandPRSJSON, deleteIf, flattenList, flattenListString, flattenPRS, renameTopic\",\n    \"transforms.valueToKey.type\":\"org.apache.kafka.connect.transforms.ValueToKey\",\n    \"transforms.valueToKey.fields\":\"id\",\n    \"transforms.extractKey.type\":\"org.apache.kafka.connect.transforms.ExtractField$Key\",\n    \"transforms.extractKey.field\":\"id\",\n    \"transforms.expandJSON.type\": \"com.redhat.insights.expandjsonsmt.ExpandJSON$Value\",\n    \"transforms.expandJSON.sourceFields\": \"tags\",\n    \"transforms.expandPRSJSON.type\": \"com.redhat.insights.expandjsonsmt.ExpandJSON$Value\",\n    \"transforms.expandPRSJSON.sourceFields\": \"per_reporter_staleness\",\n    \"transforms.deleteIf.type\": \"com.redhat.insights.deleteifsmt.DeleteIf$Value\",\n    \"transforms.deleteIf.field\": \"__deleted\",\n    \"transforms.deleteIf.value\": \"true\",\n    \"transforms.flattenList.type\": \"com.redhat.insights.flattenlistsmt.FlattenList$Value\",\n    \"transforms.flattenList.sourceField\": \"tags\",\n    \"transforms.flattenList.outputField\": \"tags_structured\",\n    \"transforms.flattenList.mode\": \"keys\",\n    \"transforms.flattenList.keys\": \"namespace,key,value\",\n    \"transforms.flattenListString.type\": \"com.redhat.insights.flattenlistsmt.FlattenList$Value\",\n    \"transforms.flattenListString.sourceField\": \"tags\",\n    \"transforms.flattenListString.outputField\": \"tags_string\",\n    \"transforms.flattenListString.mode\": \"join\",\n    \"transforms.flattenListString.delimiterJoin\": \"/\",\n    \"transforms.flattenListString.encode\": true,\n    \"transforms.flattenPRS.type\": \"com.redhat.insights.flattenlistsmt.FlattenList$Value\",\n    \"transforms.flattenPRS.sourceField\": \"per_reporter_staleness\",\n    \"transforms.flattenPRS.outputField\": \"per_reporter_staleness_flat\",\n    \"transforms.flattenPRS.mode\": \"object\",\n    \"transforms.flattenPRS.rootKey\": \"reporter\",\n    \"transforms.renameTopic.type\": \"org.apache.kafka.connect.transforms.RegexRouter\",\n    \"transforms.renameTopic.regex\": \"{{.Topic}}\",\n    \"transforms.renameTopic.replacement\": \"{{.RenameTopicReplacement}}\",\n    \"behavior.on.null.values\":\"delete\",\n    \"behavior.on.malformed.documents\": \"warn\",\n    \"auto.create.indices.at.start\": false,\n    \"schema.ignore\": true,\n    \"max.in.flight.requests\": {{.ElasticSearchMaxInFlightRequests}},\n    \"errors.log.enable\": {{.ElasticSearchErrorsLogEnable}},\n    \"errors.log.include.messages\": true,\n    \"max.retries\": {{.ElasticSearchMaxRetries}},\n    \"retry.backoff.ms\": {{.ElasticSearchRetryBackoffMS}},\n    \"batch.size\": {{.ElasticSearchBatchSize}},\n    \"max.buffered.records\": {{.ElasticSearchMaxBufferedRecords}},\n    \"linger.ms\": {{.ElasticSearchLingerMS}}\n}",
        "elasticsearch.index.template": "{\n  \"settings\": {\n    \"index\": {\n      \"number_of_shards\": \"{{.ElasticSearchIndexShards}}\",\n      \"number_of_replicas\": \"{{.ElasticSearchIndexReplicas}}\",\n      \"default_pipeline\": \"{{.ElasticSearchPipeline}}\",\n      \"max_result_window\": 50000\n    },\n    \"analysis\": {\n      \"normalizer\": {\n        \"case_insensitive\": {\n          \"filter\": \"lowercase\"\n        }\n      }\n    }\n  },\n  \"mappings\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"ingest_timestamp\": {\n        \"type\": \"date\"\n      },\n      \"id\": {\n        \"type\": \"keyword\"\n      },\n      \"account\": {\n        \"type\": \"keyword\"\n      },\n      \"org_id\": {\n        \"type\": \"keyword\"\n      },\n      \"display_name\": {\n        \"type\": \"keyword\",\n        \"fields\": {\n          \"lowercase\": {\n            \"type\": \"keyword\",\n            \"normalizer\": \"case_insensitive\"\n          }\n        }\n      },\n      \"created_on\": {\n        \"type\": \"date_nanos\"\n      },\n      \"modified_on\": {\n        \"type\": \"date_nanos\"\n      },\n      \"stale_timestamp\": {\n        \"type\": \"date_nanos\"\n      },\n      \"ansible_host\": {\n        \"type\": \"keyword\"\n      },\n      \"canonical_facts\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fqdn\": {\n            \"type\": \"keyword\",\n            \"fields\": {\n              \"lowercase\": {\n                \"type\": \"keyword\",\n                \"normalizer\": \"case_insensitive\"\n              }\n            }\n          },\n          \"insights_id\": {\n            \"type\": \"keyword\"\n          },\n          \"satellite_id\": {\n            \"type\": \"keyword\"\n          },\n          \"provider_type\": {\n            \"type\": \"keyword\"\n          },\n          \"provider_id\": {\n            \"type\": \"keyword\"\n          }\n        }\n      },\n      \"groups\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"keyword\"\n          },\n          \"name\": {\n            \"type\": \"keyword\",\n            \"fields\": {\n              \"lowercase\": {\n                \"type\": \"keyword\",\n                \"normalizer\": \"case_insensitive\"\n              }\n            }\n          },\n          \"account\": {\n            \"type\": \"keyword\"\n          },\n          \"org_id\": {\n            \"type\": \"keyword\"\n          },\n          \"created\": {\n            \"type\": \"date_nanos\"\n          },\n          \"updated\": {\n            \"type\": \"date_nanos\"\n          }\n        }\n      },\n      \"system_profile_facts\": {\n        \"properties\": {\n          \"owner_id\": {\n            \"type\": \"keyword\"\n          },\n          \"rhc_client_id\": {\n            \"type\": \"keyword\"\n          },\n          \"rhc_config_state\": {\n            \"type\": \"keyword\"\n          },\n          \"cpu_model\": {\n            \"type\": \"keyword\"\n          },\n          \"number_of_cpus\": {\n            \"type\": \"integer\"\n          },\n          \"number_of_sockets\": {\n            \"type\": \"integer\"\n          },\n          \"cores_per_socket\": {\n            \"type\": \"integer\"\n          },\n          \"threads_per_core\": {\n            \"type\": \"integer\"\n          },\n          \"system_memory_bytes\": {\n            \"type\": \"long\"\n          },\n          \"infrastructure_type\": {\n            \"type\": \"keyword\"\n          },\n          \"infrastructure_vendor\": {\n            \"type\": \"keyword\"\n          },\n          \"network_interfaces\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"ipv4_addresses\": {\n                \"type\": \"keyword\"\n              },\n              \"ipv6_addresses\": {\n                \"type\": \"keyword\"\n              },\n              \"mtu\": {\n                \"type\": \"integer\"\n              },\n              \"mac_address\": {\n                \"type\": \"keyword\"\n              },\n              \"name\": {\n                \"type\": \"keyword\"\n              },\n              \"state\": {\n                \"type\": \"keyword\"\n              },\n              \"type\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"disk_devices\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"device\": {\n                \"type\": \"keyword\"\n              },\n              \"label\": {\n                \"type\": \"text\"\n              },\n              \"mount_point\": {\n                \"type\": \"keyword\"\n              },\n              \"type\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"bios_vendor\": {\n            \"type\": \"keyword\"\n          },\n          \"bios_version\": {\n            \"type\": \"keyword\"\n          },\n          \"cpu_flags\": {\n            \"type\": \"keyword\"\n          },\n          \"systemd\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"state\": {\n                \"type\": \"keyword\"\n              },\n              \"jobs_queued\": {\n                \"type\": \"integer\"\n              },\n              \"failed\": {\n                \"type\": \"integer\"\n              },\n              \"failed_services\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"operating_system\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"major\": {\n                \"type\": \"integer\"\n              },\n              \"minor\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"os_release\": {\n            \"type\": \"keyword\"\n          },\n          \"os_kernel_version\": {\n            \"type\": \"keyword\"\n          },\n          \"releasever\": {\n            \"type\": \"keyword\"\n          },\n          \"arch\": {\n            \"type\": \"keyword\"\n          },\n          \"basearch\": {\n            \"type\": \"keyword\"\n          },\n          \"kernel_modules\": {\n            \"type\": \"keyword\"\n          },\n          \"last_boot_time\": {\n            \"type\": \"keyword\"\n          },\n          \"subscription_status\": {\n            \"type\": \"keyword\"\n          },\n          \"subscription_auto_attach\": {\n            \"type\": \"keyword\"\n          },\n          \"katello_agent_running\": {\n            \"type\": \"boolean\"\n          },\n          \"satellite_managed\": {\n            \"type\": \"boolean\"\n          },\n          \"cloud_provider\": {\n            \"type\": \"keyword\"\n          },\n          \"dnf_modules\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"keyword\"\n              },\n              \"stream\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"installed_products\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"keyword\"\n              },\n              \"id\": {\n                \"type\": \"keyword\"\n              },\n              \"status\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"insights_client_version\": {\n            \"type\": \"keyword\"\n          },\n          \"insights_egg_version\": {\n            \"type\": \"keyword\"\n          },\n          \"captured_date\": {\n            \"type\": \"keyword\"\n          },\n          \"installed_packages\": {\n            \"type\": \"keyword\"\n          },\n          \"gpg_pubkeys\": {\n            \"type\": \"keyword\"\n          },\n          \"installed_services\": {\n            \"type\": \"keyword\"\n          },\n          \"enabled_services\": {\n            \"type\": \"keyword\"\n          },\n          \"sap\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"sap_system\": {\n                \"type\": \"boolean\"\n              },\n              \"sids\": {\n                \"type\": \"keyword\"\n              },\n              \"instance_number\": {\n                \"type\": \"keyword\"\n              },\n              \"version\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"sap_system\": {\n            \"type\": \"boolean\"\n          },\n          \"sap_sids\": {\n            \"type\": \"keyword\"\n          },\n          \"sap_instance_number\": {\n            \"type\": \"keyword\"\n          },\n          \"sap_version\": {\n            \"type\": \"keyword\"\n          },\n          \"tuned_profile\": {\n            \"type\": \"keyword\"\n          },\n          \"selinux_current_mode\": {\n            \"type\": \"keyword\"\n          },\n          \"selinux_config_file\": {\n            \"type\": \"keyword\"\n          },\n          \"is_marketplace\": {\n            \"type\": \"boolean\"\n          },\n          \"host_type\": {\n            \"type\": \"keyword\"\n          },\n          \"greenboot_status\": {\n            \"type\": \"keyword\"\n          },\n          \"greenboot_fallback_detected\": {\n            \"type\": \"boolean\"\n          },\n          \"rpm_ostree_deployments\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"keyword\"\n              },\n              \"checksum\": {\n                \"type\": \"keyword\"\n              },\n              \"origin\": {\n                \"type\": \"keyword\"\n              },\n              \"osname\": {\n                \"type\": \"keyword\"\n              },\n              \"version\": {\n                \"type\": \"keyword\"\n              },\n              \"booted\": {\n                \"type\": \"boolean\"\n              },\n              \"pinned\": {\n                \"type\": \"boolean\"\n              }\n            }\n          },\n          \"rhsm\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"version\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"system_purpose\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"usage\": {\n                \"type\": \"keyword\"\n              },\n              \"role\": {\n                \"type\": \"keyword\"\n              },\n              \"sla\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"ansible\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"controller_version\": {\n                \"type\": \"keyword\"\n              },\n              \"hub_version\": {\n                \"type\": \"keyword\"\n              },\n              \"catalog_worker_version\": {\n                \"type\": \"keyword\"\n              },\n              \"sso_version\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"mssql\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"version\": {\n                \"type\": \"keyword\"\n              }\n            }\n          },\n          \"system_update_method\": {\n            \"type\": \"keyword\"\n          },\n          \"virtual_host_uuid\": {\n            \"type\": \"keyword\"\n          }\n        }\n      },\n      \"tags_structured\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"namespace\": {\n            \"type\": \"keyword\",\n            \"null_value\": \"$$_XJOIN_SEARCH_NULL_VALUE\"\n          },\n          \"key\": {\n            \"type\": \"keyword\"\n          },\n          \"value\": {\n            \"type\": \"keyword\",\n            \"null_value\": \"$$_XJOIN_SEARCH_NULL_VALUE\"\n          }\n        }\n      },\n      \"per_reporter_staleness_flat\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"reporter\": {\n            \"type\": \"keyword\"\n          },\n          \"last_check_in\": {\n            \"type\": \"keyword\"\n          },\n          \"stale_timestamp\": {\n            \"type\": \"keyword\"\n          },\n          \"check_in_succeeded\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"tags_string\": {\n        \"type\": \"keyword\"\n      },\n      \"tags_search_combined\": {\n        \"type\": \"keyword\"\n      },\n      \"tags_search\": {\n        \"type\": \"keyword\",\n        \"fields\": {\n          \"lowercase\": {\n            \"type\": \"keyword\",\n            \"normalizer\": \"case_insensitive\"\n          }\n        }\n      }\n    }\n  }\n}",
        "elasticsearch.pipeline.template": "{\n    \"description\" : \"Ingest pipeline for {{.ResourceNamePrefix}}\",\n    \"processors\" : [{\n        \"set\": {\n            \"field\": \"ingest_timestamp\",\n            \"value\": \"{{\"{{\"}}_ingest.timestamp{{\"}}\"}}\"\n        },\n        \"json\" : {\n            \"if\" : \"ctx.system_profile_facts != null\",\n            \"field\" : \"system_profile_facts\"\n        }\n    }, {\n        \"json\" : {\n            \"if\" : \"ctx.canonical_facts != null\",\n            \"field\" : \"canonical_facts\"\n        }\n    }, {\n        \"json\" : {\n            \"if\" : \"ctx.facts != null\",\n            \"field\" : \"facts\"\n        }\n    }, {\n        \"json\" : {\n            \"if\" : \"ctx.groups != null\",\n            \"field\" : \"groups\"\n        }\n    }, {\n        \"script\": {\n            \"lang\": \"painless\",\n            \"if\": \"ctx.tags_structured != null\",\n            \"source\": \"ctx.tags_search = ctx.tags_structured.stream().map(t -> { StringBuilder builder = new StringBuilder(); if (t.namespace != null && t.namespace != 'null') { builder.append(t.namespace); } builder.append('/'); builder.append(t.key); builder.append('='); if (t.value != null) { builder.append(t.value); } return builder.toString() }).collect(Collectors.toList()); ctx.tags_search_combined = ctx.tags_search.stream().map(t -> {return t + 'c6509b6d-9646-4122-a16c-f536660c22ee' + t.toLowerCase()}).collect(Collectors.toList());\"\n        }\n    }]\n}",
        "init.validation.attempts.threshold": "30",
        "init.validation.interval": "30",
        "init.validation.percentage.threshold": "5",
        "kafka.topic.replicas": "1",
        "standard.interval": "60",
        "validation.attempts.threshold": "5",
        "validation.interval": "30",
        "validation.percentage.threshold": "5"
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "xjoin"
      }
    },
    {
      "apiVersion": "cloud.redhat.com/v1alpha1",
      "kind": "ClowdApp",
      "metadata": {
        "name": "ingress"
      },
      "spec": {
        "dependencies": [
          "puptoo",
          "storage-broker"
        ],
        "deployments": [
          {
            "minReplicas": 1,
            "name": "service",
            "podSpec": {
              "env": [
                {
                  "name": "INGRESS_PAYLOADTRACKERURL",
                  "value": "http://payload-tracker-api:8000/api/v1/payloads/"
                },
                {
                  "name": "INGRESS_STAGEBUCKET",
                  "value": "insights-upload-perma"
                },
                {
                  "name": "INGRESS_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "INGRESS_VALID_UPLOAD_TYPES",
                  "value": "advisor,compliance,hccm,qpc,rhv,tower,leapp-reporting,xavier,mkt,playbook,playbook-sat,resource-optimization,malware-detection,pinakes,assisted-installer,runtimes-java-general,openshift,tasks,automation-hub"
                },
                {
                  "name": "INGRESS_MAXSIZEMAP",
                  "value": "{\"qpc\": \"157286400\"}"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "INGRESS_MINIOENDPOINT",
                  "value": ""
                },
                {
                  "name": "INGRESS_DENY_LISTED_ORGIDS",
                  "value": ""
                },
                {
                  "name": "SSL_CERT_DIR",
                  "value": "/etc/ssl/certs:/etc/pki/tls/certs:/system/etc/security/cacerts:/cdapp/certs"
                }
              ],
              "image": "quay.io/cloudservices/insights-ingress:677cdbe",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 35,
                "periodSeconds": 5,
                "successThreshold": 1,
                "timeoutSeconds": 120
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 35,
                "periodSeconds": 5,
                "successThreshold": 1,
                "timeoutSeconds": 120
              },
              "volumeMounts": [
                {
                  "mountPath": "/tmp",
                  "name": "tmpdir"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "tmpdir"
                }
              ]
            },
            "webServices": {
              "public": {
                "apiPath": "ingress",
                "enabled": true
              }
            }
          }
        ],
        "envName": "foo",
        "kafkaTopics": [
          {
            "partitions": 3,
            "replicas": 3,
            "topicName": "platform.payload-status"
          },
          {
            "partitions": 64,
            "replicas": 3,
            "topicName": "platform.upload.announce"
          }
        ],
        "objectStore": [
          "insights-upload-perma"
        ],
        "optionalDependencies": [
          "host-inventory",
          "payload-tracker-go"
        ],
        "testing": {
          "iqePlugin": "ingress"
        }
      }
    },
    {
      "apiVersion": "cloud.redhat.com/v1alpha1",
      "kind": "ClowdApp",
      "metadata": {
        "name": "puptoo"
      },
      "spec": {
        "deployments": [
          {
            "minReplicas": 1,
            "name": "processor",
            "podSpec": {
              "env": [
                {
                  "name": "LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "KAFKA_LOGGER",
                  "value": "ERROR"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "HABERDASHER_EMITTER",
                  "value": "stderr"
                },
                {
                  "name": "HABERDASHER_KAFKA_BOOTSTRAP",
                  "value": "kafka:29092"
                },
                {
                  "name": "HABERDASHER_KAFKA_TOPIC",
                  "value": "platform.logging.logs"
                },
                {
                  "name": "HABERDASHER_LABELS",
                  "value": "{\"app\": \"puptoo\"}"
                },
                {
                  "name": "HABERDASHER_TAGS",
                  "value": "[\"puptoo\"]"
                }
              ],
              "image": "quay.io/cloudservices/insights-puptoo:39c8be9",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/metrics",
                  "port": 9000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 1
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/metrics",
                  "port": 9000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 1
              }
            }
          }
        ],
        "envName": "foo",
        "inMemoryDb": true,
        "kafkaTopics": [
          {
            "config": {
              "retention.bytes": "2684354560",
              "retention.ms": "86400000"
            },
            "partitions": 20,
            "replicas": 3,
            "topicName": "platform.inventory.host-ingress-p1"
          },
          {
            "partitions": 24,
            "replicas": 3,
            "topicName": "platform.upload.validation"
          },
          {
            "partitions": 4,
            "replicas": 3,
            "topicName": "platform.payload-status"
          },
          {
            "partitions": 64,
            "replicas": 3,
            "topicName": "platform.upload.announce"
          }
        ],
        "objectStore": [
          "insights-upload-puptoo"
        ],
        "optionalDependencies": [
          "ingress",
          "storage-broker",
          "host-inventory"
        ],
        "testing": {
          "iqePlugin": "puptoo"
        }
      }
    },
    {
      "apiVersion": "cloud.redhat.com/v1alpha1",
      "kind": "ClowdApp",
      "metadata": {
        "name": "storage-broker"
      },
      "spec": {
        "deployments": [
          {
            "minReplicas": 1,
            "name": "processor",
            "podSpec": {
              "env": [
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "KAFKA_LOG_LEVEL",
                  "value": "ERROR"
                },
                {
                  "name": "PERM_BUCKET",
                  "value": "insights-upload-perma"
                },
                {
                  "name": "REJECT_BUCKET",
                  "value": "insights-upload-rejected"
                },
                {
                  "name": "MONITORED_SERVICES",
                  "value": "openshift,ansible"
                },
                {
                  "name": "BUCKET_MAP_FILE",
                  "value": "/var/config.yaml"
                },
                {
                  "name": "AWS_ACCESS_KEY_ID",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "aws_access_key_id",
                      "name": "ingress-buckets-read-write",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "AWS_SECRET_ACCESS_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "aws_secret_access_key",
                      "name": "ingress-buckets-read-write",
                      "optional": true
                    }
                  }
                }
              ],
              "image": "quay.io/cloudservices/insights-storage-broker:001959d",
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/metrics",
                  "port": 9000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 27
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/metrics",
                  "port": 9000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 30
              },
              "volumeMounts": [
                {
                  "mountPath": "/var",
                  "name": "storage-broker-map"
                }
              ],
              "volumes": [
                {
                  "configMap": {
                    "defaultMode": 420,
                    "name": "storage-broker-map"
                  },
                  "name": "storage-broker-map"
                }
              ]
            },
            "webServices": {
              "public": {
                "enabled": true
              }
            }
          }
        ],
        "envName": "foo",
        "kafkaTopics": [
          {
            "partitions": 24,
            "replicas": 3,
            "topicName": "platform.upload.validation"
          },
          {
            "partitions": 16,
            "replicas": 3,
            "topicName": "platform.upload.buckit"
          },
          {
            "partitions": 4,
            "replicas": 3,
            "topicName": "platform.payload-status"
          },
          {
            "partitions": 4,
            "replicas": 3,
            "topicName": "platform.logging.logs"
          },
          {
            "partitions": 64,
            "replicas": 3,
            "topicName": "platform.upload.announce"
          }
        ],
        "objectStore": [
          "insights-upload-perma",
          "insights-upload-rejected",
          "insights-buck-it-openshift",
          "insights-buck-it-ansible",
          "insights-upload-tower-analytics"
        ],
        "optionalDependencies": [
          "ingress",
          "puptoo"
        ]
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "config.yaml": "platform.upload.validation:\n  normalizer: Validation\nplatform.upload.announce:\n  normalizer: Openshift\n  services:\n    openshift:\n      format: \"{org_id}/{cluster_id}/{timestamp}-{request_id}\"\n      bucket: insights-buck-it-openshift\n    ansible:\n      format: \"{org_id}/{cluster_id}/{timestamp}-{request_id}\"\n      bucket: insights-buck-it-ansible\n    tower:\n      format: \"{org_id}/{request_id}\"\n      bucket: insights-upload-tower-analytics\n    pinakes:\n      format: \"{org_id}/{request_id}\"\n      bucket: insights-upload-tower-analytics\n    automation-hub:\n      format: \"{org_id}/{request_id}\"\n      bucket: insights-upload-tower-analytics"
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "storage-broker-map"
      }
    },
    {
      "apiVersion": "cloud.redhat.com/v1alpha1",
      "kind": "ClowdApp",
      "metadata": {
        "annotations": {
          "bonfire.dependencies": "model-access-permissions-yml-stage,rbac-config-yml-stage"
        },
        "name": "rbac"
      },
      "spec": {
        "database": {
          "dbVolumeSize": "medium",
          "name": "rbac"
        },
        "deployments": [
          {
            "metadata": {
              "annotations": {
                "ignore-check.kube-linter.io/minimum-three-replicas": "dont need 3 replicas - runs background processes from turnpike/weekly tasks"
              }
            },
            "minReplicas": 0,
            "name": "worker-service",
            "podSpec": {
              "command": [
                "/bin/bash",
                "-c",
                "PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery worker -l $DJANGO_LOG_LEVEL\n"
              ],
              "env": [
                {
                  "name": "AUTHENTICATE_WITH_ORG_ID",
                  "value": "True"
                },
                {
                  "name": "DJANGO_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "DJANGO_DEBUG",
                  "value": "False"
                },
                {
                  "name": "PERMISSION_SEEDING_ENABLED",
                  "value": "False"
                },
                {
                  "name": "ROLE_SEEDING_ENABLED",
                  "value": "False"
                },
                {
                  "name": "GROUP_SEEDING_ENABLED",
                  "value": "False"
                },
                {
                  "name": "DJANGO_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "django-secret-key",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_PROTOCOL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-protocol",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-host",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_PORT",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-port",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_PATH",
                  "value": ""
                },
                {
                  "name": "PRINCIPAL_PROXY_USER_ENV",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-env",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_CLIENT_ID",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "client-id",
                      "name": "insights-rbac",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_API_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "token",
                      "name": "insights-rbac",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_SSL_VERIFY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-ssl-verify",
                      "name": "rbac-secret",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_SOURCE_CERT",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-source-cert",
                      "name": "rbac-secret",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "APP_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "PGSSLMODE",
                  "value": "prefer"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "CW_NULL_WORKAROUND",
                  "value": "true"
                },
                {
                  "name": "GLITCHTIP_DSN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "dsn",
                      "name": "rbac-secret",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "MAX_SEED_THREADS",
                  "value": "2"
                },
                {
                  "name": "ACCESS_CACHE_CONNECT_SIGNALS",
                  "value": "False"
                },
                {
                  "name": "NOTIFICATIONS_ENABLED",
                  "value": "True"
                },
                {
                  "name": "NOTIFICATIONS_RH_ENABLED",
                  "value": "True"
                },
                {
                  "name": "KAFKA_ENABLED",
                  "value": "True"
                },
                {
                  "name": "NOTIFICATIONS_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "EXTERNAL_SYNC_TOPIC",
                  "value": "platform.rbac.sync"
                },
                {
                  "name": "EXTERNAL_CHROME_TOPIC",
                  "value": "platform.chrome"
                },
                {
                  "name": "MIGRATE_AND_SEED_ON_INIT",
                  "value": "False"
                }
              ],
              "image": "quay.io/cloudservices/rbac:fc427b9",
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "/opt/rbac/deploy/init-container-setup.sh"
                  ],
                  "env": null,
                  "inheritEnv": true
                }
              ],
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-c",
                    "PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery inspect ping\n"
                  ]
                },
                "failureThreshold": 3,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-c",
                    "PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery inspect ping\n"
                  ]
                },
                "failureThreshold": 3,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "volumeMounts": [
                {
                  "mountPath": "/opt/rbac/rbac/management/role/definitions",
                  "name": "default-role-config"
                },
                {
                  "mountPath": "/opt/rbac/rbac/management/role/permissions",
                  "name": "model-access-permissions"
                }
              ],
              "volumes": [
                {
                  "configMap": {
                    "name": "rbac-config"
                  },
                  "name": "default-role-config"
                },
                {
                  "configMap": {
                    "name": "model-access-permissions"
                  },
                  "name": "model-access-permissions"
                }
              ]
            }
          },
          {
            "metadata": {
              "annotations": {
                "ignore-check.kube-linter.io/minimum-three-replicas": "dont need 3 replicas - keeps the cron scheduled for the weekly tasks"
              }
            },
            "minReplicas": 0,
            "name": "scheduler-service",
            "podSpec": {
              "command": [
                "/bin/bash",
                "-c",
                "PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery beat -l $DJANGO_LOG_LEVEL\n"
              ],
              "env": [
                {
                  "name": "AUTHENTICATE_WITH_ORG_ID",
                  "value": "True"
                },
                {
                  "name": "DJANGO_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "DJANGO_DEBUG",
                  "value": "False"
                },
                {
                  "name": "APP_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "PERMISSION_SEEDING_ENABLED",
                  "value": "False"
                },
                {
                  "name": "ROLE_SEEDING_ENABLED",
                  "value": "False"
                },
                {
                  "name": "GROUP_SEEDING_ENABLED",
                  "value": "False"
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "CW_NULL_WORKAROUND",
                  "value": "true"
                },
                {
                  "name": "GLITCHTIP_DSN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "dsn",
                      "name": "rbac-secret",
                      "optional": true
                    }
                  }
                }
              ],
              "image": "quay.io/cloudservices/rbac:fc427b9",
              "livenessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-c",
                    "PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery inspect ping\n"
                  ]
                },
                "failureThreshold": 3,
                "initialDelaySeconds": 120,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 10
              },
              "readinessProbe": {
                "exec": {
                  "command": [
                    "/bin/bash",
                    "-c",
                    "PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery inspect ping\n"
                  ]
                },
                "failureThreshold": 3,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 10
              }
            }
          },
          {
            "minReplicas": 1,
            "name": "service",
            "podSpec": {
              "env": [
                {
                  "name": "GLITCHTIP_DSN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "dsn",
                      "name": "rbac-secret",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "SERVICE_PSKS",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "psks.json",
                      "name": "rbac-psks",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PGSSLMODE",
                  "value": "prefer"
                },
                {
                  "name": "DJANGO_SECRET_KEY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "django-secret-key",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_PROTOCOL",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-protocol",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_HOST",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-host",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_PORT",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-port",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_PATH",
                  "value": ""
                },
                {
                  "name": "PRINCIPAL_PROXY_USER_ENV",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-env",
                      "name": "rbac-secret",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_CLIENT_ID",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "client-id",
                      "name": "insights-rbac",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_API_TOKEN",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "token",
                      "name": "insights-rbac",
                      "optional": false
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_SSL_VERIFY",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-ssl-verify",
                      "name": "rbac-secret",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "PRINCIPAL_PROXY_SERVICE_SOURCE_CERT",
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "principal-proxy-source-cert",
                      "name": "rbac-secret",
                      "optional": true
                    }
                  }
                },
                {
                  "name": "POD_CPU_LIMIT",
                  "valueFrom": {
                    "resourceFieldRef": {
                      "containerName": "rbac-service",
                      "resource": "limits.cpu"
                    }
                  }
                },
                {
                  "name": "ACCESS_CACHE_ENABLED",
                  "value": "True"
                },
                {
                  "name": "APP_NAMESPACE",
                  "valueFrom": {
                    "fieldRef": {
                      "fieldPath": "metadata.namespace"
                    }
                  }
                },
                {
                  "name": "DJANGO_DEBUG",
                  "value": "False"
                },
                {
                  "name": "API_PATH_PREFIX",
                  "value": "/api/rbac"
                },
                {
                  "name": "DEVELOPMENT",
                  "value": "false"
                },
                {
                  "name": "RBAC_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "DJANGO_LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "DJANGO_LOG_FORMATTER",
                  "value": "simple"
                },
                {
                  "name": "DJANGO_LOG_HANDLERS",
                  "value": "console,ecs"
                },
                {
                  "name": "DJANGO_LOG_DIRECTORY",
                  "value": ""
                },
                {
                  "name": "DJANGO_LOGGING_FILE",
                  "value": ""
                },
                {
                  "name": "PERMISSION_SEEDING_ENABLED",
                  "value": "True"
                },
                {
                  "name": "ROLE_SEEDING_ENABLED",
                  "value": "True"
                },
                {
                  "name": "GROUP_SEEDING_ENABLED",
                  "value": "True"
                },
                {
                  "name": "BYPASS_BOP_VERIFICATION",
                  "value": "False"
                },
                {
                  "name": "ROLE_CREATE_ALLOW_LIST",
                  "value": "cost-management,remediations,inventory,drift,policies,advisor,catalog,approval,vulnerability,compliance,automation-analytics,notifications,patch,integrations,ros"
                },
                {
                  "name": "RBAC_DESTRUCTIVE_ENABLED_UNTIL",
                  "value": ""
                },
                {
                  "name": "CLOWDER_ENABLED",
                  "value": "true"
                },
                {
                  "name": "APP_NAMESPACE",
                  "value": "rbac"
                },
                {
                  "name": "CW_NULL_WORKAROUND",
                  "value": "true"
                },
                {
                  "name": "REDIS_MAX_CONNECTIONS",
                  "value": "10"
                },
                {
                  "name": "REDIS_SOCKET_CONNECT_TIMEOUT",
                  "value": "0.1"
                },
                {
                  "name": "REDIS_SOCKET_TIMEOUT",
                  "value": "0.1"
                },
                {
                  "name": "AUTHENTICATE_WITH_ORG_ID",
                  "value": "True"
                },
                {
                  "name": "NOTIFICATIONS_ENABLED",
                  "value": "True"
                },
                {
                  "name": "GUNICORN_WORKER_MULTIPLIER",
                  "value": "2"
                },
                {
                  "name": "GUNICORN_THREAD_LIMIT",
                  "value": "10"
                },
                {
                  "name": "NOTIFICATIONS_TOPIC",
                  "value": "platform.notifications.ingress"
                },
                {
                  "name": "KAFKA_ENABLED",
                  "value": "True"
                },
                {
                  "name": "EXTERNAL_SYNC_TOPIC",
                  "value": "platform.rbac.sync"
                },
                {
                  "name": "EXTERNAL_CHROME_TOPIC",
                  "value": "platform.chrome"
                },
                {
                  "name": "MIGRATE_AND_SEED_ON_INIT",
                  "value": "True"
                },
                {
                  "name": "USE_CLOWDER_CA_FOR_BOP",
                  "value": "False"
                },
                {
                  "name": "IT_BYPASS_IT_CALLS",
                  "value": "True"
                },
                {
                  "name": "IT_BYPASS_PERMISSIONS_MODIFY_SERVICE_ACCOUNTS",
                  "value": "True"
                },
                {
                  "name": "IT_BYPASS_TOKEN_VALIDATION",
                  "value": "True"
                },
                {
                  "name": "IT_SERVICE_BASE_PATH",
                  "value": "/auth/realms/redhat-external/apis"
                },
                {
                  "name": "IT_SERVICE_HOST",
                  "value": "localhost"
                },
                {
                  "name": "IT_SERVICE_PORT",
                  "value": "443"
                },
                {
                  "name": "IT_SERVICE_PROTOCOL_SCHEME",
                  "value": "https"
                },
                {
                  "name": "IT_SERVICE_TIMEOUT_SECONDS",
                  "value": "10"
                },
                {
                  "name": "IT_TOKEN_JKWS_CACHE_LIFETIME",
                  "value": "28800"
                }
              ],
              "image": "quay.io/cloudservices/rbac:fc427b9",
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "/opt/rbac/deploy/init-container-setup.sh"
                  ],
                  "env": null,
                  "inheritEnv": true
                }
              ],
              "livenessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/api/rbac/v1/status/",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 3
              },
              "readinessProbe": {
                "failureThreshold": 3,
                "httpGet": {
                  "path": "/api/rbac/v1/status/",
                  "port": 8000,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 3
              },
              "volumeMounts": [
                {
                  "mountPath": "/opt/rbac/rbac/management/role/definitions",
                  "name": "default-role-config"
                },
                {
                  "mountPath": "/opt/rbac/rbac/management/role/permissions",
                  "name": "model-access-permissions"
                }
              ],
              "volumes": [
                {
                  "configMap": {
                    "name": "rbac-config"
                  },
                  "name": "default-role-config"
                },
                {
                  "configMap": {
                    "name": "model-access-permissions"
                  },
                  "name": "model-access-permissions"
                }
              ]
            },
            "webServices": {
              "public": {
                "apiPath": "rbac",
                "enabled": true
              }
            }
          }
        ],
        "envName": "foo",
        "inMemoryDb": true,
        "jobs": [
          {
            "name": "tenant-org-id-populator",
            "podSpec": {
              "command": [
                "./org-id-column-populator",
                "-C",
                "-a",
                "account_id",
                "-o",
                "org_id",
                "-t",
                "api_tenant",
                "--ean-translator-addr",
                "http://gateway.3scale-dev.svc.cluster.local:8891",
                "--batch-size",
                "50"
              ],
              "env": [
                {
                  "name": "LOG_FORMAT",
                  "value": "${LOG_FORMAT}"
                },
                {
                  "name": "LOG_BATCH_FREQUENCY",
                  "value": "1"
                }
              ],
              "image": "quay.io/cloudservices/tenant-utils:latest",
              "resources": {
                "limits": {
                  "cpu": "300m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "512Mi"
                }
              }
            }
          },
          {
            "name": "cross-account-request-target-org-populator",
            "podSpec": {
              "command": [
                "./org-id-column-populator",
                "-C",
                "-a",
                "target_account",
                "-o",
                "target_org",
                "-t",
                "api_crossaccountrequest",
                "--ean-translator-addr",
                "http://gateway.3scale-dev.svc.cluster.local:8891",
                "--batch-size",
                "50"
              ],
              "env": [
                {
                  "name": "LOG_FORMAT",
                  "value": "${LOG_FORMAT}"
                },
                {
                  "name": "LOG_BATCH_FREQUENCY",
                  "value": "1"
                }
              ],
              "image": "quay.io/cloudservices/tenant-utils:latest",
              "resources": {
                "limits": {
                  "cpu": "300m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "512Mi"
                }
              }
            }
          }
        ],
        "kafkaTopics": [
          {
            "partitions": 3,
            "replicas": 3,
            "topicName": "platform.notifications.ingress"
          },
          {
            "partitions": 1,
            "replicas": 3,
            "topicName": "platform.rbac.sync"
          },
          {
            "partitions": 1,
            "replicas": 3,
            "topicName": "platform.chrome"
          }
        ],
        "testing": {
          "iqePlugin": "rbac"
        }
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "api-path-prefix": "/api/rbac",
        "app-config": "/opt/rbac/rbac/gunicorn.py",
        "app-domain": "${APP_DOMAIN}",
        "app-home": "/opt/rbac/rbac",
        "app-module": "rbac.wsgi",
        "app-namespace": "rbac-stage",
        "database-engine": "postgresql",
        "database-name": "rbac",
        "database-service-name": "POSTGRES_SQL",
        "development": "False",
        "django-debug": "False",
        "django-log-directory": "",
        "django-log-formatter": "simple",
        "django-log-handlers": "console",
        "django-log-level": "INFO",
        "django-logging-file": "",
        "postgres-sql-service-host": "rbac-pgsql.rbac-stage.svc",
        "postgres-sql-service-port": "5432",
        "rbac-log-level": "INFO"
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "rbac-env"
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "approval.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Approval Administrator\",\n      \"system\": true,\n      \"version\": 5,\n      \"description\": \"An approval administrator role that grants permissions to manage workflows, requests, actions, and templates.\",\n      \"access\": [\n        {\n          \"permission\": \"approval:templates:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:update\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:delete\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:link\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:unlink\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:requests:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            },\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            },\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"Approval User\",\n      \"system\": true,\n      \"version\": 4,\n      \"description\": \"An approval user role which grants permissions to create/read/cancel a request, and read workflows.\",\n      \"platform_default\": true,\n      \"access\": [\n        {\n          \"permission\": \"approval:requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:requests:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"Approval Approver\",\n      \"system\": true,\n      \"version\": 4,\n      \"description\": \"An approval approver role that grants permissions to read and approve requests.\",\n      \"access\": [\n        {\n          \"permission\": \"approval:requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "automation-analytics.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Automation Analytics Administrator\",\n      \"description\": \"An Automation Analytics Administrator role that grants ALL permissions.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"automation-analytics:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Automation Analytics Editor\",\n      \"description\": \"An Automation Analytics Editor role that grants read-write permissions.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"automation-analytics:*:read\"\n        },\n        {\n          \"permission\": \"automation-analytics:*:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Automation Analytics Viewer\",\n      \"description\": \"An Automation Analytics Viewer role that grants read permissions.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"automation-analytics:*:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "catalog.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Catalog Administrator\",\n      \"display_name\": \"Automation Services Catalog administrator\",\n      \"system\": true,\n      \"version\": 9,\n      \"description\": \"A catalog administrator roles grants create,read,update, delete and order permissions\",\n      \"access\": [\n        {\n          \"permission\": \"catalog:portfolios:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolios:create\"\n        },\n        {\n          \"permission\": \"catalog:portfolios:update\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolios:delete\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolios:order\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:update\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:delete\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:order\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:orders:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:orders:write\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:orders:order\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_items:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_items:write\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_items:order\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:progress_messages:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:progress_messages:write\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:approval_requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:approval_requests:write\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:tenants:update\"\n        },\n        {\n          \"permission\": \"catalog:tenants:read\"\n        },\n        {\n          \"permission\": \"catalog:order_processes:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_processes:delete\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_processes:link\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_processes:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_processes:unlink\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_processes:update\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"Catalog User\",\n      \"display_name\": \"Automation Services Catalog user\",\n      \"system\": true,\n      \"version\": 9,\n      \"description\": \"A catalog user roles grants read and order permissions\",\n      \"platform_default\": true,\n      \"access\": [\n        {\n          \"permission\": \"catalog:portfolios:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolios:update\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolios:order\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:update\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:portfolio_items:order\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:orders:write\"\n        },\n        {\n          \"permission\": \"catalog:orders:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:orders:order\"\n        },\n        {\n          \"permission\": \"catalog:order_items:write\"\n        },\n        {\n          \"permission\": \"catalog:order_items:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:order_items:order\"\n        },\n        {\n          \"permission\": \"catalog:progress_messages:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:approval_requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"catalog:tenants:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "compliance.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Compliance administrator\",\n      \"description\": \"A Compliance role that grants full access to any Compliance resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 12,\n      \"access\": [\n        {\n          \"permission\": \"compliance:*:*\"\n        },\n        {\n          \"permission\": \"remediations:remediation:read\"\n        },\n        {\n          \"permission\": \"remediations:remediation:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Compliance viewer\",\n      \"description\": \"A Compliance role that grants read access to any Compliance resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 5,\n      \"access\": [\n        {\n          \"permission\": \"compliance:policy:read\"\n        },\n        {\n          \"permission\": \"compliance:report:read\"\n        },\n        {\n          \"permission\": \"compliance:system:read\"\n        },\n        {\n          \"permission\": \"remediations:remediation:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "config-manager.json": "{\n  \"roles\": [\n    {\n      \"name\": \"RHC Administrator\",\n      \"display_name\": \"RHC administrator\",\n      \"description\": \"Perform any operations on RHC manager\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"platform_default\": false,\n      \"version\": 6,\n      \"access\": [\n        {\n          \"permission\": \"config-manager:activation_keys:*\"\n        },\n        {\n          \"permission\": \"config-manager:state:read\"\n        },\n        {\n          \"permission\": \"config-manager:state:write\"\n        },\n        {\n          \"permission\": \"config-manager:state-changes:read\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"config_manager\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"subscriptions:organization:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"RHC Viewer\",\n      \"display_name\": \"RHC viewer\",\n      \"description\": \"Can view the current configurations on RHC manager\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 6,\n      \"access\": [\n        {\n          \"permission\": \"config-manager:activation_keys:read\"\n        },\n        {\n          \"permission\": \"config-manager:state:read\"\n        },\n        {\n          \"permission\": \"config-manager:state-changes:read\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"config_manager\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "content-sources.json": "{\n    \"roles\": [\n      {\n        \"name\": \"Repositories administrator\",\n        \"description\": \"Perform any available operation against any repositories resource.\",\n        \"system\": true,\n        \"platform_default\": false,\n        \"admin_default\": true,\n        \"version\": 2,\n        \"access\": [\n          {\n            \"permission\": \"content-sources:repositories:read\"\n          },\n          {\n            \"permission\": \"content-sources:repositories:write\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Repositories viewer\",\n        \"description\": \"Perform read only operations against repositories resources.\",\n        \"system\": true,\n        \"platform_default\": true,\n        \"version\": 2,\n        \"access\": [\n          {\n            \"permission\": \"content-sources:repositories:read\"\n          }\n        ]\n      }\n    ]\n  }\n",
        "cost-management.json": "{\n    \"roles\": [{\n        \"name\": \"Cost Administrator\",\n        \"description\": \"A cost management administrator role that grants read and write permissions.\",\n        \"system\": true,\n        \"admin_default\": true,\n        \"version\": 3,\n        \"access\": [{\n            \"permission\": \"cost-management:*:*\"\n        }]\n    }, {\n        \"name\": \"Cost Price List Administrator\",\n        \"description\": \"A cost management role that grants read and write permissions on cost models.\",\n        \"system\": true,\n        \"version\": 5,\n        \"access\": [{\n            \"permission\": \"cost-management:cost_model:*\"\n        }, {\n            \"permission\": \"cost-management:settings:*\"\n        }]\n    }, {\n        \"name\": \"Cost Price List Viewer\",\n        \"description\": \"A cost management role that grants read permissions on cost models.\",\n        \"system\": true,\n        \"version\": 4,\n        \"access\": [{\n            \"permission\": \"cost-management:cost_model:read\"\n        }, {\n            \"permission\": \"cost-management:settings:read\"\n        }]\n    }, {\n        \"name\": \"Cost Cloud Viewer\",\n        \"description\": \"A cost management role that grants read permissions on cost reports related to cloud sources.\",\n        \"system\": true,\n        \"version\": 6,\n        \"access\": [{\n            \"permission\": \"cost-management:aws.account:*\"\n        }, {\n            \"permission\": \"cost-management:aws.organizational_unit:*\"\n        }, {\n            \"permission\": \"cost-management:azure.subscription_guid:*\"\n        }, {\n            \"permission\": \"cost-management:gcp.account:*\"\n        }, {\n            \"permission\": \"cost-management:gcp.project:*\"\n        }, {\n            \"permission\": \"cost-management:oci.payer_tenant_id:*\"\n        }]\n    }, {\n        \"name\": \"Cost OpenShift Viewer\",\n        \"description\": \"A cost management role that grants read permissions on cost reports related to OpenShift sources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"cost-management:openshift.cluster:*\"\n        }]\n    }]\n}\n",
        "drift.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Drift analysis administrator\",\n      \"description\": \"Perform any available operation against any Drift Analysis resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 13,\n      \"access\": [\n        {\n          \"permission\": \"drift:comparisons:read\"\n        },\n        {\n          \"permission\": \"drift:baselines:read\"\n        },\n        {\n          \"permission\": \"drift:baselines:write\"\n        },\n        {\n          \"permission\": \"drift:historical-system-profiles:read\"\n        },\n        {\n          \"permission\": \"drift:notifications:read\"\n        },\n        {\n          \"permission\": \"drift:notifications:write\"\n        },\n        {\n          \"permission\": \"drift:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Drift viewer\",\n      \"description\": \"Perform read only operation against Drift Analysis resources.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"drift:comparisons:read\"\n        },\n        {\n          \"permission\": \"drift:baselines:read\"\n        },\n        {\n          \"permission\": \"drift:historical-system-profiles:read\"\n        },\n        {\n          \"permission\": \"drift:notifications:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "hybrid-committed-spend.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Hybrid Committed Spend viewer\",\n      \"description\": \"View any Hybrid Committed Spend report.\",\n      \"system\": true,\n      \"admin_default\": false,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"hybrid-committed-spend:reports:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "insights.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Insights administrator\",\n      \"display_name\": \"RHEL Advisor administrator\",\n      \"description\": \"Perform any available operation against any RHEL Advisor resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 11,\n      \"access\": [\n        {\n          \"permission\": \"advisor:*:*\"\n        }\n      ]\n    }\n  ]\n}\n",
        "inventory.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Inventory administrator\",\n      \"description\": \"Perform any available operation against any Inventory resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Hosts Administrator\",\n      \"description\": \"Be able to read and edit Inventory Hosts data.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:hosts:write\"\n        },\n        {\n          \"permission\": \"inventory:hosts:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Hosts Viewer\",\n      \"description\": \"Be able to read Inventory Hosts data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:hosts:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Groups Administrator\",\n      \"description\": \"Be able to read and edit Inventory Groups data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:groups:write\"\n        },\n        {\n          \"permission\": \"inventory:groups:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Groups Viewer\",\n      \"description\": \"Be able to read Inventory Groups data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:groups:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Account Staleness and Culling Administrator\",\n      \"description\": \"Be able to read and edit Account Staleness and Deletion data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"display_name\": \"Account Staleness and Deletion Administrator\",\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"inventory:staleness:write\"\n        },\n        {\n          \"permission\": \"inventory:staleness:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Account Staleness and Culling Viewer\",\n      \"description\": \"Be able to read Account Staleness and Deletion data.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": false,\n      \"display_name\": \"Account Staleness and Deletion Viewer\",\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"inventory:staleness:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "malware-detection.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Malware detection administrator\",\n      \"display_name\": \"Malware detection administrator\",\n      \"description\": \"Perform any available operation against any malware-detection resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"malware-detection:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Malware detection viewer\",\n      \"display_name\": \"Malware detection viewer\",\n      \"description\": \"Read any malware-detection resource.\",\n      \"system\": true,\n      \"version\": 2,\n      \"access\": [\n        {\n          \"permission\": \"malware-detection:*:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "notifications.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Notifications administrator\",\n      \"description\": \"Perform any available operation against Notifications and Integrations applications.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"notifications:*:*\"\n        },\n        {\n          \"permission\": \"integrations:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Notifications viewer\",\n      \"description\": \"Read only access to notifications and integrations applications.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 2,\n      \"access\": [\n        {\n          \"permission\": \"notifications:notifications:read\"\n        },\n        {\n          \"permission\": \"integrations:endpoints:read\"\n        }\n      ]\n    }\n\n  ]\n}\n",
        "ocm.json": "{\n  \"roles\": [\n    {\n      \"name\": \"OCM Cluster Editor\",\n      \"display_name\": \"OCM Cluster Editor\",\n      \"description\": \"Grants permission to edit clusters\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 2,\n      \"external\": {\n        \"id\": \"ClusterEditor\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Idp Editor\",\n      \"display_name\": \"OCM Idp Editor\",\n      \"description\": \"Grants permission to edit idps\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"external\": {\n        \"id\": \"IdpEditor\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Machine Pool Editor\",\n      \"display_name\": \"OCM Machine Pool Editor\",\n      \"description\": \"Grants permission to edit machine pools\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"external\": {\n        \"id\": \"MachinePoolEditor\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Cluster Provisioner\",\n      \"display_name\": \"OCM Cluster Provisioner\",\n      \"description\": \"Grants permission to provision clusters\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 3,\n      \"external\": {\n        \"id\": \"ClusterProvisioner\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Cluster Viewer\",\n      \"display_name\": \"OCM Cluster Viewer\",\n      \"description\": \"Grants permission to view clusters\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 3,\n      \"external\": {\n        \"id\": \"ClusterViewer\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Organization Admin\",\n      \"display_name\": \"OCM Organization Admin\",\n      \"description\": \"Grants administrative permissions associated organization's clusters\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 2,\n      \"external\": {\n        \"id\": \"OrganizationAdmin\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Cluster Autoscaler Editor\",\n      \"display_name\": \"OCM Cluster Autoscaler Editor\",\n      \"description\": \"Grants permission to edit cluster autoscaler\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"external\": {\n        \"id\": \"ClusterAutoscalerEditor\",\n        \"tenant\": \"ocm\"\n      }\n    }\n  ]\n}\n",
        "ocp-advisor.json": "{\n  \"roles\": [\n    {\n      \"name\": \"OCP Advisor administrator\",\n      \"display_name\": \"OCP Advisor administrator\",\n      \"description\": \"Perform any available operation against any OCP Advisor resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"ocp-advisor:*:*\"\n        }\n      ]\n    }\n  ]\n}\n",
        "patch.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Patch administrator\",\n      \"description\": \"Perform any available operation against any Patch resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 9,\n      \"access\": [\n        {\n          \"permission\": \"patch:*:*\"\n        },\n        {\n          \"permission\": \"remediations:*:read\"\n        },\n        {\n          \"permission\": \"remediations:*:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Patch viewer\",\n      \"description\": \"Read any Patch resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": false,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"patch:*:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "policies.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Policies administrator\",\n      \"description\": \"Perform any available operation against any Policies resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 8,\n      \"access\": [\n        {\n          \"permission\": \"policies:policies:read\"\n        },\n        {\n          \"permission\": \"policies:policies:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Policies viewer\",\n      \"description\": \"Perform read only operation against any Policies resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 2,\n      \"access\": [\n        {\n          \"permission\": \"policies:policies:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "provisioning.json": "{\n    \"roles\": [{\n        \"name\": \"Launch Administrator\",\n        \"description\": \"An launch administrator role that grants read and write permissions.\",\n        \"system\": true,\n        \"admin_default\": true,\n        \"version\": 1,\n        \"access\": [{\n            \"permission\": \"provisioning:*:*\"\n        }]\n    }, {\n        \"name\": \"Launch Viewer\",\n        \"description\": \"An launch role that grants read permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"platform_default\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:read\"\n        }, {\n            \"permission\": \"provisioning:pubkey:read\"\n        }, {\n            \"permission\": \"provisioning:reservation:read\"\n        }, {\n            \"permission\": \"provisioning:reservation.aws:read\"\n        }, {\n            \"permission\": \"provisioning:reservation.azure:read\"\n        }, {\n            \"permission\": \"provisioning:reservation.gcp:read\"\n        }]\n    }, {\n        \"name\": \"Launch on AWS User\",\n        \"description\": \"An AWS launch role that grants write permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:*\"\n        }, {\n            \"permission\": \"provisioning:pubkey:*\"\n        }, {\n            \"permission\": \"provisioning:reservation:*\"\n        }, {\n            \"permission\": \"provisioning:reservation.aws:*\"\n        }]\n    }, {\n        \"name\": \"Launch on Azure User\",\n        \"description\": \"An Azure launch role that grants write permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:*\"\n        }, {\n            \"permission\": \"provisioning:pubkey:*\"\n        }, {\n            \"permission\": \"provisioning:reservation:*\"\n        }, {\n            \"permission\": \"provisioning:reservation.azure:*\"\n        }]\n    }, {\n        \"name\": \"Launch on Google Cloud User\",\n        \"description\": \"An Google Cloud launch role that grants write permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:*\"\n        }, {\n            \"permission\": \"provisioning:pubkey:*\"\n        }, {\n            \"permission\": \"provisioning:reservation:*\"\n        }, {\n            \"permission\": \"provisioning:reservation.gcp:*\"\n        }]\n    }]\n}\n",
        "rbac.json": "{\n  \"roles\": [\n    {\n      \"name\": \"User Access administrator\",\n      \"display_name\": \"User Access administrator\",\n      \"description\": \"Grants a non-org admin full access to configure and manage user access to services hosted on console.redhat.com. This role can only be viewed and assigned by Organization Administrators.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"platform_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"rbac:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"User Access principal viewer\",\n      \"display_name\": \"User Access principal viewer\",\n      \"description\": \"Grants a non-org admin read access to principals within user access.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"rbac:principal:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "remediations.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Remediations administrator\",\n      \"description\": \"Perform any available operation against any Remediations resource\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 8,\n      \"access\": [\n        {\n          \"permission\": \"remediations:*:*\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"remediations\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"Remediations user\",\n      \"description\": \"Perform create, view, update, delete operations against any Remediations resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 5,\n      \"access\": [\n        {\n          \"permission\": \"remediations:remediation:read\"\n        },\n        {\n          \"permission\": \"remediations:remediation:write\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"remediations\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "ros.json": "{\n    \"roles\": [\n      {\n        \"name\": \"Resource Optimization administrator\",\n        \"description\": \"Perform any available operation against any Resource Optimization resource.\",\n        \"system\": true,\n        \"platform_default\": false,\n        \"admin_default\": true,\n        \"version\": 3,\n        \"access\": [\n          {\n            \"permission\": \"ros:*:*\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Resource Optimization user\",\n        \"description\": \"A Resource Optimization user role that grants read only permission.\",\n        \"system\": true,\n        \"platform_default\": true,\n        \"version\": 2,\n        \"access\": [\n          {\n            \"permission\": \"ros:*:read\"\n          }\n        ]\n      }\n    ]\n}\n",
        "sources.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Sources administrator\",\n      \"description\": \"Perform any available operation against any Source\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"sources:*:*\"\n        }\n      ]\n    }\n  ]\n}\n",
        "subscriptions.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Subscription Watch administrator\",\n      \"display_name\": \"Subscriptions administrator\",\n      \"description\": \"Perform any available operation against any Subscriptions resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"platform_default\": false,\n      \"version\": 7,\n      \"access\": [\n        {\n          \"permission\": \"subscriptions:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Subscriptions user\",\n      \"description\": \"View any Subscriptions resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 5,\n      \"access\": [\n        {\n          \"permission\": \"subscriptions:reports:read\"\n        },\n        {\n          \"permission\": \"subscriptions:manifests:read\"\n        },\n        {\n          \"permission\": \"subscriptions:organization:read\"\n        },\n        {\n          \"permission\": \"subscriptions:products:read\"\n        },\n        {\n          \"permission\": \"subscriptions:cloud_access:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "tasks.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Tasks administrator\",\n      \"description\": \"Perform any available operation against any Tasks resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"tasks:*:*\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"tasks\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "vulnerability.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Vulnerability administrator\",\n      \"description\": \"Perform any available operation against any Vulnerability resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 11,\n      \"access\": [\n        {\n          \"permission\": \"vulnerability:*:*\"\n        },\n        {\n          \"permission\": \"remediations:*:read\"\n        },\n        {\n          \"permission\": \"remediations:*:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Vulnerability viewer\",\n      \"description\": \"Read any Vulnerability resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": false,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"vulnerability:vulnerability_results:read\"\n        },\n        {\n          \"permission\": \"vulnerability:system.opt_out:read\"\n        },\n        {\n          \"permission\": \"vulnerability:report_and_export:read\"\n        },\n        {\n          \"permission\": \"vulnerability:advanced_report:read\"\n        }\n      ]\n    }\n  ]\n}\n"
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "rbac-config"
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "advisor.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"disable-recommendations\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"weekly-email\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"recommendation-results\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"exports\": [\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "approval.json": "{\n    \"actions\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"requests\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"templates\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"workflows\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"update\"\n        },\n        {\n            \"verb\": \"delete\"\n        },\n        {\n            \"verb\": \"link\"\n        },\n        {\n            \"verb\": \"unlink\"\n        }\n    ]\n}\n",
        "automation-analytics.json": "{\n    \"*\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "catalog.json": "{\n    \"approval_requests\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"orders\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"order\"\n        }\n    ],\n    \"order_items\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"order\"\n        }\n    ],\n    \"order_processes\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"link\"\n        },\n        {\n            \"verb\": \"unlink\"\n        },\n        {\n            \"verb\": \"update\"\n        },\n        {\n            \"verb\": \"delete\"\n        }\n    ],\n    \"portfolios\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"update\"\n        },\n        {\n            \"verb\": \"delete\"\n        },\n        {\n            \"verb\": \"order\"\n        }\n    ],\n    \"portfolio_items\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"update\"\n        },\n        {\n            \"verb\": \"delete\"\n        },\n        {\n            \"verb\": \"order\"\n        }\n    ],\n    \"progress_messages\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"tenants\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"update\"\n        }\n    ]\n}\n",
        "compliance.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"system\": [\n      {\n        \"verb\": \"read\"\n      }\n    ],\n    \"report\": [\n      {\n        \"verb\": \"read\"\n      },\n      {\n        \"verb\": \"delete\"\n      }\n    ],\n    \"policy\": [\n      {\n        \"verb\": \"read\"\n      },\n      {\n        \"verb\": \"create\"\n      },\n      {\n        \"verb\": \"update\"\n      },\n      {\n        \"verb\": \"delete\"\n      },\n      {\n        \"verb\": \"write\"\n      }\n    ]\n}\n",
        "config-manager.json": "{\n    \"activation_keys\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"state\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"state-changes\": [\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "content-sources.json": "{\n    \"repositories\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "cost-management.json": "{\n    \"aws.account\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"aws.organizational_unit\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"azure.subscription_guid\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"gcp.account\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"gcp.project\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"oci.payer_tenant_id\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"openshift.cluster\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"openshift.node\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"openshift.project\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"cost_model\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"settings\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "drift.json": "{\n  \"*\": [\n    {\n      \"verb\": \"*\"\n    }\n  ],\n  \"comparisons\": [\n    {\n      \"verb\": \"read\"\n    }\n  ],\n  \"baselines\": [\n    {\n      \"verb\": \"read\"\n    },\n    {\n      \"verb\": \"write\"\n    }\n  ],\n  \"historical-system-profiles\": [\n    {\n      \"verb\": \"read\"\n    }\n  ],\n  \"notifications\": [\n    {\n      \"verb\": \"read\"\n    },\n    {\n      \"verb\": \"write\"\n    }\n  ]\n}\n",
        "hybrid-committed-spend.json": "{\n    \"reports\": [\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "integrations.json": "{\n    \"endpoints\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "inventory.json": "{\n    \"*\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"hosts\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"groups\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"staleness\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "malware-detection.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "migration-analytics.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "notifications.json": "{\n    \"notifications\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"events\" : [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "ocp-advisor.json": "{\n  \"*\": [\n    {\n      \"verb\": \"*\"\n    }\n  ],\n  \"toggle-recommendations\": [\n    {\n      \"verb\": \"write\"\n    }\n  ],\n  \"recommendation-results\": [\n    {\n      \"verb\": \"read\"\n    }\n  ],\n  \"exports\": [\n    {\n      \"verb\": \"read\"\n    }\n  ]\n}\n",
        "patch.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"system\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"template\": [\n        {\n            \"verb\": \"write\"\n        }\n    ]\n}\n",
        "playbook-dispatcher.json": "{\n    \"run\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ]\n}\n",
        "policies.json": "{\n    \"policies\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "provisioning.json": "{\n    \"source\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"pubkey\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation.aws\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation.azure\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation.gcp\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "remediations.json": "{\n    \"remediation\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"execute\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "ros.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "sources.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "subscriptions.json": "{\n    \"reports\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"manifests\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"organization\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"products\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"cloud_access\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "tasks.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "vulnerability.json": "{\n    \"*\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"vulnerability_results\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"cve.business_risk_and_status\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"system.cve.status\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"advanced_report\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"report_and_export\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"system.opt_out\": [\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"toggle_cves_without_errata\": [\n        {\n            \"verb\": \"write\"\n        }\n    ]\n}\n"
      },
      "kind": "ConfigMap",
      "metadata": {
        "name": "model-access-permissions"
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "psks.json": "ewogICJhZHZpc29yIjogewogICAgImFsdC1zZWNyZXQiOiAiMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEiCiAgfSwKICAiYXBwcm92YWwiOiB7CiAgICAiYWx0LXNlY3JldCI6ICIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMiIKICB9Cn0="
      },
      "kind": "Secret",
      "metadata": {
        "name": "rbac-psks"
      },
      "type": "Opaque"
    },
    {
      "apiVersion": "v1",
      "data": {
        "client-id": "aW5zaWdodHMtcmJhYw==",
        "token": "MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMg=="
      },
      "kind": "Secret",
      "metadata": {
        "name": "insights-rbac"
      },
      "type": "Opaque"
    },
    {
      "apiVersion": "v1",
      "data": {
        "django-secret-key": "MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE=",
        "principal-proxy-api-token": "MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMg==",
        "principal-proxy-client-id": "aW5zaWdodHMtcmJhYw==",
        "principal-proxy-env": "c3RhZ2U=",
        "principal-proxy-host": "bWJvcA==",
        "principal-proxy-port": "ODA5MA==",
        "principal-proxy-protocol": "aHR0cA==",
        "principal-proxy-source-cert": "RmFsc2U=",
        "principal-proxy-ssl-verify": "RmFsc2U=",
        "sentry-dsn": ""
      },
      "kind": "Secret",
      "metadata": {
        "name": "rbac-secret"
      },
      "type": "Opaque"
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "labels": {
          "app": "rbac",
          "pod": "rbac-service"
        },
        "name": "rbac"
      },
      "spec": {
        "ports": [
          {
            "name": "weblegacy",
            "port": 8080,
            "protocol": "TCP",
            "targetPort": 8000
          }
        ],
        "selector": {
          "pod": "rbac-service"
        }
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "advisor.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"disable-recommendations\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"weekly-email\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"recommendation-results\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"exports\": [\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "approval.json": "{\n    \"actions\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"requests\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"templates\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"workflows\": [\n        {\n            \"verb\": \"create\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"update\"\n        },\n        {\n            \"verb\": \"delete\"\n        },\n        {\n            \"verb\": \"link\"\n        },\n        {\n            \"verb\": \"unlink\"\n        }\n    ]\n}\n",
        "automation-analytics.json": "{\n    \"*\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "compliance.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"system\": [\n      {\n        \"verb\": \"read\"\n      }\n    ],\n    \"report\": [\n      {\n        \"verb\": \"read\"\n      },\n      {\n        \"verb\": \"delete\"\n      }\n    ],\n    \"policy\": [\n      {\n        \"verb\": \"read\"\n      },\n      {\n        \"verb\": \"create\"\n      },\n      {\n        \"verb\": \"update\"\n      },\n      {\n        \"verb\": \"delete\"\n      },\n      {\n        \"verb\": \"write\"\n      }\n    ]\n}\n",
        "config-manager.json": "{\n    \"activation_keys\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"state\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"state-changes\": [\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "content-sources.json": "{\n    \"repositories\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "cost-management.json": "{\n    \"aws.account\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"aws.organizational_unit\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"azure.subscription_guid\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"gcp.account\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"gcp.project\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"oci.payer_tenant_id\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"openshift.cluster\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"openshift.node\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"openshift.project\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"cost_model\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"settings\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "drift.json": "{\n  \"*\": [\n    {\n      \"verb\": \"*\"\n    }\n  ],\n  \"comparisons\": [\n    {\n      \"verb\": \"read\"\n    }\n  ],\n  \"baselines\": [\n    {\n      \"verb\": \"read\"\n    },\n    {\n      \"verb\": \"write\"\n    }\n  ],\n  \"historical-system-profiles\": [\n    {\n      \"verb\": \"read\"\n    }\n  ],\n  \"notifications\": [\n    {\n      \"verb\": \"read\"\n    },\n    {\n      \"verb\": \"write\"\n    }\n  ]\n}\n",
        "hybrid-committed-spend.json": "{\n    \"reports\": [\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "integrations.json": "{\n    \"endpoints\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "inventory.json": "{\n    \"*\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"hosts\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"groups\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "malware-detection.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "migration-analytics.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "notifications.json": "{\n    \"notifications\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"events\" : [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "ocp-advisor.json": "{\n  \"*\": [\n    {\n      \"verb\": \"*\"\n    }\n  ],\n  \"toggle-recommendations\": [\n    {\n      \"verb\": \"write\"\n    }\n  ],\n  \"recommendation-results\": [\n    {\n      \"verb\": \"read\"\n    }\n  ],\n  \"exports\": [\n    {\n      \"verb\": \"read\"\n    }\n  ]\n}\n",
        "patch.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"system\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"template\": [\n        {\n            \"verb\": \"write\"\n        }\n    ]\n}\n",
        "playbook-dispatcher.json": "{\n    \"run\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ]\n}\n",
        "policies.json": "{\n    \"policies\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "provisioning.json": "{\n    \"source\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"pubkey\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation.aws\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation.azure\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"reservation.gcp\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\",\n            \"requires\": [\n                \"read\"\n            ]\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "remediations.json": "{\n    \"remediation\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"execute\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "ros.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ]\n}\n",
        "sources.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "staleness.json": "{\n    \"staleness\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "subscriptions.json": "{\n    \"reports\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"manifests\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"organization\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"products\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"cloud_access\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "tasks.json": "{\n    \"*\": [\n        {\n            \"verb\": \"*\"\n        }\n    ]\n}\n",
        "vulnerability.json": "{\n    \"*\": [\n        {\n            \"verb\": \"read\"\n        },\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"*\"\n        }\n    ],\n    \"vulnerability_results\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"cve.business_risk_and_status\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"system.cve.status\": [\n        {\n            \"verb\": \"write\"\n        }\n    ],\n    \"advanced_report\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"report_and_export\": [\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"system.opt_out\": [\n        {\n            \"verb\": \"write\"\n        },\n        {\n            \"verb\": \"read\"\n        }\n    ],\n    \"toggle_cves_without_errata\": [\n        {\n            \"verb\": \"write\"\n        }\n    ]\n}\n"
      },
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "qontract.recycle": "true"
        },
        "creationTimestamp": null,
        "name": "model-access-permissions"
      }
    },
    {
      "apiVersion": "v1",
      "data": {
        "approval.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Approval Administrator\",\n      \"system\": true,\n      \"version\": 5,\n      \"description\": \"An approval administrator role that grants permissions to manage workflows, requests, actions, and templates.\",\n      \"access\": [\n        {\n          \"permission\": \"approval:templates:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:update\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:delete\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:link\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:unlink\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:requests:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            },\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            },\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"Approval User\",\n      \"system\": true,\n      \"version\": 4,\n      \"description\": \"An approval user role which grants permissions to create/read/cancel a request, and read workflows.\",\n      \"platform_default\": true,\n      \"access\": [\n        {\n          \"permission\": \"approval:requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:requests:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"user\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:workflows:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"admin\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"Approval Approver\",\n      \"system\": true,\n      \"version\": 4,\n      \"description\": \"An approval approver role that grants permissions to read and approve requests.\",\n      \"access\": [\n        {\n          \"permission\": \"approval:requests:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:create\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"approval:actions:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"scope\",\n                \"operation\": \"equal\",\n                \"value\": \"group\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "automation-analytics.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Automation Analytics Administrator\",\n      \"description\": \"An Automation Analytics Administrator role that grants ALL permissions.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"automation-analytics:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Automation Analytics Editor\",\n      \"description\": \"An Automation Analytics Editor role that grants read-write permissions.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"automation-analytics:*:read\"\n        },\n        {\n          \"permission\": \"automation-analytics:*:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Automation Analytics Viewer\",\n      \"description\": \"An Automation Analytics Viewer role that grants read permissions.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"automation-analytics:*:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "compliance.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Compliance administrator\",\n      \"description\": \"A Compliance role that grants full access to any Compliance resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 12,\n      \"access\": [\n        {\n          \"permission\": \"compliance:*:*\"\n        },\n        {\n          \"permission\": \"remediations:remediation:read\"\n        },\n        {\n          \"permission\": \"remediations:remediation:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Compliance viewer\",\n      \"description\": \"A Compliance role that grants read access to any Compliance resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 5,\n      \"access\": [\n        {\n          \"permission\": \"compliance:policy:read\"\n        },\n        {\n          \"permission\": \"compliance:report:read\"\n        },\n        {\n          \"permission\": \"compliance:system:read\"\n        },\n        {\n          \"permission\": \"remediations:remediation:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "config-manager.json": "{\n  \"roles\": [\n    {\n      \"name\": \"RHC Administrator\",\n      \"display_name\": \"RHC administrator\",\n      \"description\": \"Perform any operations on RHC manager\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"platform_default\": false,\n      \"version\": 6,\n      \"access\": [\n        {\n          \"permission\": \"config-manager:activation_keys:*\"\n        },\n        {\n          \"permission\": \"config-manager:state:read\"\n        },\n        {\n          \"permission\": \"config-manager:state:write\"\n        },\n        {\n          \"permission\": \"config-manager:state-changes:read\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"config_manager\"\n              }\n            }\n          ]\n        },\n        {\n          \"permission\": \"subscriptions:organization:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"RHC Viewer\",\n      \"display_name\": \"RHC user\",\n      \"description\": \"Can view the current configurations on RHC manager and write to activation keys\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 7,\n      \"access\": [\n        {\n          \"permission\": \"config-manager:activation_keys:read\"\n        },\n        {\n          \"permission\": \"config-manager:activation_keys:write\"\n        },\n        {\n          \"permission\": \"config-manager:state:read\"\n        },\n        {\n          \"permission\": \"config-manager:state-changes:read\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"config_manager\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "content-sources.json": "{\n    \"roles\": [\n      {\n        \"name\": \"Repositories administrator\",\n        \"description\": \"Perform any available operation against any repositories resource.\",\n        \"system\": true,\n        \"platform_default\": false,\n        \"admin_default\": true,\n        \"version\": 2,\n        \"access\": [\n          {\n            \"permission\": \"content-sources:repositories:read\"\n          },\n          {\n            \"permission\": \"content-sources:repositories:write\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Repositories viewer\",\n        \"description\": \"Perform read only operations against repositories resources.\",\n        \"system\": true,\n        \"platform_default\": true,\n        \"version\": 2,\n        \"access\": [\n          {\n            \"permission\": \"content-sources:repositories:read\"\n          }\n        ]\n      }\n    ]\n  }\n",
        "cost-management.json": "{\n    \"roles\": [{\n        \"name\": \"Cost Administrator\",\n        \"description\": \"A cost management administrator role that grants read and write permissions.\",\n        \"system\": true,\n        \"admin_default\": true,\n        \"version\": 3,\n        \"access\": [{\n            \"permission\": \"cost-management:*:*\"\n        }]\n    }, {\n        \"name\": \"Cost Price List Administrator\",\n        \"description\": \"A cost management role that grants read and write permissions on cost models.\",\n        \"system\": true,\n        \"version\": 5,\n        \"access\": [{\n            \"permission\": \"cost-management:cost_model:*\"\n        }, {\n            \"permission\": \"cost-management:settings:*\"\n        }]\n    }, {\n        \"name\": \"Cost Price List Viewer\",\n        \"description\": \"A cost management role that grants read permissions on cost models.\",\n        \"system\": true,\n        \"version\": 4,\n        \"access\": [{\n            \"permission\": \"cost-management:cost_model:read\"\n        }, {\n            \"permission\": \"cost-management:settings:read\"\n        }]\n    }, {\n        \"name\": \"Cost Cloud Viewer\",\n        \"description\": \"A cost management role that grants read permissions on cost reports related to cloud sources.\",\n        \"system\": true,\n        \"version\": 6,\n        \"access\": [{\n            \"permission\": \"cost-management:aws.account:*\"\n        }, {\n            \"permission\": \"cost-management:aws.organizational_unit:*\"\n        }, {\n            \"permission\": \"cost-management:azure.subscription_guid:*\"\n        }, {\n            \"permission\": \"cost-management:gcp.account:*\"\n        }, {\n            \"permission\": \"cost-management:gcp.project:*\"\n        }, {\n            \"permission\": \"cost-management:oci.payer_tenant_id:*\"\n        }]\n    }, {\n        \"name\": \"Cost OpenShift Viewer\",\n        \"description\": \"A cost management role that grants read permissions on cost reports related to OpenShift sources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"cost-management:openshift.cluster:*\"\n        }]\n    }]\n}\n",
        "drift.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Drift analysis administrator\",\n      \"description\": \"Perform any available operation against any Drift Analysis resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 13,\n      \"access\": [\n        {\n          \"permission\": \"drift:comparisons:read\"\n        },\n        {\n          \"permission\": \"drift:baselines:read\"\n        },\n        {\n          \"permission\": \"drift:baselines:write\"\n        },\n        {\n          \"permission\": \"drift:historical-system-profiles:read\"\n        },\n        {\n          \"permission\": \"drift:notifications:read\"\n        },\n        {\n          \"permission\": \"drift:notifications:write\"\n        },\n        {\n          \"permission\": \"drift:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Drift viewer\",\n      \"description\": \"Perform read only operation against Drift Analysis resources.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"drift:comparisons:read\"\n        },\n        {\n          \"permission\": \"drift:baselines:read\"\n        },\n        {\n          \"permission\": \"drift:historical-system-profiles:read\"\n        },\n        {\n          \"permission\": \"drift:notifications:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "hybrid-committed-spend.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Hybrid Committed Spend viewer\",\n      \"description\": \"View any Hybrid Committed Spend report.\",\n      \"system\": true,\n      \"admin_default\": false,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"hybrid-committed-spend:reports:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "insights.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Insights administrator\",\n      \"display_name\": \"RHEL Advisor administrator\",\n      \"description\": \"Perform any available operation against any RHEL Advisor resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 11,\n      \"access\": [\n        {\n          \"permission\": \"advisor:*:*\"\n        }\n      ]\n    }\n  ]\n}\n",
        "inventory.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Inventory administrator\",\n      \"description\": \"Perform any available operation against any Inventory resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Hosts Administrator\",\n      \"description\": \"Be able to read and edit Inventory Hosts data.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:hosts:write\"\n        },\n        {\n          \"permission\": \"inventory:hosts:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Hosts Viewer\",\n      \"description\": \"Be able to read Inventory Hosts data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:hosts:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Groups Administrator\",\n      \"description\": \"Be able to read and edit Inventory Groups data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:groups:write\"\n        },\n        {\n          \"permission\": \"inventory:groups:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Inventory Groups Viewer\",\n      \"description\": \"Be able to read Inventory Groups data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"inventory:groups:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "malware-detection.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Malware detection administrator\",\n      \"display_name\": \"Malware detection administrator\",\n      \"description\": \"Perform any available operation against any malware-detection resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"malware-detection:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Malware detection viewer\",\n      \"display_name\": \"Malware detection viewer\",\n      \"description\": \"Read any malware-detection resource.\",\n      \"system\": true,\n      \"version\": 2,\n      \"access\": [\n        {\n          \"permission\": \"malware-detection:*:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "notifications.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Notifications administrator\",\n      \"description\": \"Perform any available operation against Notifications and Integrations applications.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"notifications:*:*\"\n        },\n        {\n          \"permission\": \"integrations:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Notifications viewer\",\n      \"description\": \"Read only access to notifications and integrations applications.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 2,\n      \"access\": [\n        {\n          \"permission\": \"notifications:notifications:read\"\n        },\n        {\n          \"permission\": \"integrations:endpoints:read\"\n        }\n      ]\n    }\n\n  ]\n}\n",
        "ocm.json": "{\n  \"roles\": [\n    {\n      \"name\": \"OCM Cluster Editor\",\n      \"display_name\": \"OCM Cluster Editor\",\n      \"description\": \"Grants permission to edit clusters\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 2,\n      \"external\": {\n        \"id\": \"ClusterEditor\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Idp Editor\",\n      \"display_name\": \"OCM Idp Editor\",\n      \"description\": \"Grants permission to edit idps\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"external\": {\n        \"id\": \"IdpEditor\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Machine Pool Editor\",\n      \"display_name\": \"OCM Machine Pool Editor\",\n      \"description\": \"Grants permission to edit machine pools\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"external\": {\n        \"id\": \"MachinePoolEditor\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Cluster Provisioner\",\n      \"display_name\": \"OCM Cluster Provisioner\",\n      \"description\": \"Grants permission to provision clusters\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 3,\n      \"external\": {\n        \"id\": \"ClusterProvisioner\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Cluster Viewer\",\n      \"display_name\": \"OCM Cluster Viewer\",\n      \"description\": \"Grants permission to view clusters\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 3,\n      \"external\": {\n        \"id\": \"ClusterViewer\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Organization Admin\",\n      \"display_name\": \"OCM Organization Admin\",\n      \"description\": \"Grants administrative permissions associated organization's clusters\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 2,\n      \"external\": {\n        \"id\": \"OrganizationAdmin\",\n        \"tenant\": \"ocm\"\n      }\n    },\n    {\n      \"name\": \"OCM Cluster Autoscaler Editor\",\n      \"display_name\": \"OCM Cluster Autoscaler Editor\",\n      \"description\": \"Grants permission to edit cluster autoscaler\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"external\": {\n        \"id\": \"ClusterAutoscalerEditor\",\n        \"tenant\": \"ocm\"\n      }\n    }\n  ]\n}\n",
        "ocp-advisor.json": "{\n  \"roles\": [\n    {\n      \"name\": \"OCP Advisor administrator\",\n      \"display_name\": \"OCP Advisor administrator\",\n      \"description\": \"Perform any available operation against any OCP Advisor resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"ocp-advisor:*:*\"\n        }\n      ]\n    }\n  ]\n}\n",
        "patch.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Patch administrator\",\n      \"description\": \"Perform any available operation against any Patch resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 9,\n      \"access\": [\n        {\n          \"permission\": \"patch:*:*\"\n        },\n        {\n          \"permission\": \"remediations:*:read\"\n        },\n        {\n          \"permission\": \"remediations:*:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Patch viewer\",\n      \"description\": \"Read any Patch resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": false,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"patch:*:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "policies.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Policies administrator\",\n      \"description\": \"Perform any available operation against any Policies resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"version\": 8,\n      \"access\": [\n        {\n          \"permission\": \"policies:policies:read\"\n        },\n        {\n          \"permission\": \"policies:policies:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Policies viewer\",\n      \"description\": \"Perform read only operation against any Policies resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 2,\n      \"access\": [\n        {\n          \"permission\": \"policies:policies:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "provisioning.json": "{\n    \"roles\": [{\n        \"name\": \"Launch Administrator\",\n        \"description\": \"An launch administrator role that grants read and write permissions.\",\n        \"system\": true,\n        \"admin_default\": true,\n        \"version\": 1,\n        \"access\": [{\n            \"permission\": \"provisioning:*:*\"\n        }]\n    }, {\n        \"name\": \"Launch Viewer\",\n        \"description\": \"An launch role that grants read permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"platform_default\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:read\"\n        }, {\n            \"permission\": \"provisioning:pubkey:read\"\n        }, {\n            \"permission\": \"provisioning:reservation:read\"\n        }, {\n            \"permission\": \"provisioning:reservation.aws:read\"\n        }, {\n            \"permission\": \"provisioning:reservation.azure:read\"\n        }, {\n            \"permission\": \"provisioning:reservation.gcp:read\"\n        }]\n    }, {\n        \"name\": \"Launch on AWS User\",\n        \"description\": \"An AWS launch role that grants write permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:*\"\n        }, {\n            \"permission\": \"provisioning:pubkey:*\"\n        }, {\n            \"permission\": \"provisioning:reservation:*\"\n        }, {\n            \"permission\": \"provisioning:reservation.aws:*\"\n        }]\n    }, {\n        \"name\": \"Launch on Azure User\",\n        \"description\": \"An Azure launch role that grants write permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:*\"\n        }, {\n            \"permission\": \"provisioning:pubkey:*\"\n        }, {\n            \"permission\": \"provisioning:reservation:*\"\n        }, {\n            \"permission\": \"provisioning:reservation.azure:*\"\n        }]\n    }, {\n        \"name\": \"Launch on Google Cloud User\",\n        \"description\": \"An Google Cloud launch role that grants write permissions on launch reservation and related resources.\",\n        \"system\": true,\n        \"version\": 2,\n        \"access\": [{\n            \"permission\": \"provisioning:source:*\"\n        }, {\n            \"permission\": \"provisioning:pubkey:*\"\n        }, {\n            \"permission\": \"provisioning:reservation:*\"\n        }, {\n            \"permission\": \"provisioning:reservation.gcp:*\"\n        }]\n    }]\n}\n",
        "rbac.json": "{\n  \"roles\": [\n    {\n      \"name\": \"User Access administrator\",\n      \"display_name\": \"User Access administrator\",\n      \"description\": \"Grants a non-org admin full access to configure and manage user access to services hosted on console.redhat.com. This role can only be viewed and assigned by Organization Administrators.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"platform_default\": false,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"rbac:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"User Access principal viewer\",\n      \"display_name\": \"User Access principal viewer\",\n      \"description\": \"Grants a non-org admin read access to principals within user access.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"rbac:principal:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "remediations.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Remediations administrator\",\n      \"description\": \"Perform any available operation against any Remediations resource\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"version\": 8,\n      \"access\": [\n        {\n          \"permission\": \"remediations:*:*\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"remediations\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"Remediations user\",\n      \"description\": \"Perform create, view, update, delete operations against any Remediations resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 5,\n      \"access\": [\n        {\n          \"permission\": \"remediations:remediation:read\"\n        },\n        {\n          \"permission\": \"remediations:remediation:write\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"remediations\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "ros.json": "{\n    \"roles\": [\n      {\n        \"name\": \"Resource Optimization administrator\",\n        \"description\": \"Perform any available operation against any Resource Optimization resource.\",\n        \"system\": true,\n        \"platform_default\": false,\n        \"admin_default\": true,\n        \"version\": 3,\n        \"access\": [\n          {\n            \"permission\": \"ros:*:*\"\n          }\n        ]\n      },\n      {\n        \"name\": \"Resource Optimization user\",\n        \"description\": \"A Resource Optimization user role that grants read only permission.\",\n        \"system\": true,\n        \"platform_default\": true,\n        \"version\": 2,\n        \"access\": [\n          {\n            \"permission\": \"ros:*:read\"\n          }\n        ]\n      }\n    ]\n}\n",
        "sources.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Sources administrator\",\n      \"description\": \"Perform any available operation against any Source\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"sources:*:*\"\n        }\n      ]\n    }\n  ]\n}\n",
        "staleness.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Organization Staleness and Deletion Administrator\",\n      \"description\": \"Be able to read and edit Organization Staleness and Deletion data.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"display_name\": \"Organization Staleness and Deletion Administrator\",\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"staleness:staleness:write\"\n        },\n        {\n          \"permission\": \"staleness:staleness:read\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Organization Staleness and Deletion Viewer\",\n      \"description\": \"Be able to read Organization Staleness and Deletion data.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": false,\n      \"display_name\": \"Organization Staleness and Deletion Viewer\",\n      \"version\": 1,\n      \"access\": [\n        {\n          \"permission\": \"staleness:staleness:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "subscriptions.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Subscription Watch administrator\",\n      \"display_name\": \"Subscriptions administrator\",\n      \"description\": \"Perform any available operation against any Subscriptions resource.\",\n      \"system\": true,\n      \"admin_default\": true,\n      \"platform_default\": false,\n      \"version\": 7,\n      \"access\": [\n        {\n          \"permission\": \"subscriptions:*:*\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Subscriptions user\",\n      \"description\": \"View any Subscriptions resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"version\": 5,\n      \"access\": [\n        {\n          \"permission\": \"subscriptions:reports:read\"\n        },\n        {\n          \"permission\": \"subscriptions:manifests:read\"\n        },\n        {\n          \"permission\": \"subscriptions:organization:read\"\n        },\n        {\n          \"permission\": \"subscriptions:products:read\"\n        },\n        {\n          \"permission\": \"subscriptions:cloud_access:read\"\n        }\n      ]\n    }\n  ]\n}\n",
        "tasks.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Tasks administrator\",\n      \"description\": \"Perform any available operation against any Tasks resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 3,\n      \"access\": [\n        {\n          \"permission\": \"tasks:*:*\"\n        },\n        {\n          \"permission\": \"playbook-dispatcher:run:read\",\n          \"resourceDefinitions\": [\n            {\n              \"attributeFilter\": {\n                \"key\": \"service\",\n                \"operation\": \"equal\",\n                \"value\": \"tasks\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",
        "vulnerability.json": "{\n  \"roles\": [\n    {\n      \"name\": \"Vulnerability administrator\",\n      \"description\": \"Perform any available operation against any Vulnerability resource.\",\n      \"system\": true,\n      \"platform_default\": false,\n      \"admin_default\": true,\n      \"version\": 11,\n      \"access\": [\n        {\n          \"permission\": \"vulnerability:*:*\"\n        },\n        {\n          \"permission\": \"remediations:*:read\"\n        },\n        {\n          \"permission\": \"remediations:*:write\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Vulnerability viewer\",\n      \"description\": \"Read any Vulnerability resource.\",\n      \"system\": true,\n      \"platform_default\": true,\n      \"admin_default\": false,\n      \"version\": 4,\n      \"access\": [\n        {\n          \"permission\": \"vulnerability:vulnerability_results:read\"\n        },\n        {\n          \"permission\": \"vulnerability:system.opt_out:read\"\n        },\n        {\n          \"permission\": \"vulnerability:report_and_export:read\"\n        },\n        {\n          \"permission\": \"vulnerability:advanced_report:read\"\n        }\n      ]\n    }\n  ]\n}\n"
      },
      "kind": "ConfigMap",
      "metadata": {
        "annotations": {
          "qontract.recycle": "true"
        },
        "creationTimestamp": null,
        "name": "rbac-config"
      }
    }
  ]
}
